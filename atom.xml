<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[程序员小刚]]></title>
  <link href="http://sargeraswang.com/atom.xml" rel="self"/>
  <link href="http://sargeraswang.com/"/>
  <updated>2014-12-01T09:11:45+08:00</updated>
  <id>http://sargeraswang.com/</id>
  <author>
    <name><![CDATA[SargerasWang]]></name>
    <email><![CDATA[sargeraswang@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[bootbox.js 4.3.0设置为中文]]></title>
    <link href="http://sargeraswang.com/blog/2014/12/01/bootbox-dot-js-4-dot-3-0she-zhi-wei-zhong-wen/"/>
    <updated>2014-12-01T09:06:00+08:00</updated>
    <id>http://sargeraswang.com/blog/2014/12/01/bootbox-dot-js-4-dot-3-0she-zhi-wei-zhong-wen</id>
    <content type="html"><![CDATA[<p>bootbox.js 是bootstrap用的alert/confirm插件,支持多语言.中文设置方法:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">bootbox</span><span class="p">.</span><span class="nx">setDefaults</span><span class="p">({</span><span class="nx">locale</span><span class="o">:</span><span class="s2">&quot;zh_CN&quot;</span><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后alert的确认按钮,还是显示为<code>OK</code>,直接去源码修改:
bootbox.js 最后位置</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">zh_CN</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">OK</span>      <span class="o">:</span> <span class="s2">&quot;OK&quot;</span><span class="p">,</span><span class="c1">//修改这里</span>
</span><span class='line'>      <span class="nx">CANCEL</span>  <span class="o">:</span> <span class="s2">&quot;取消&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">CONFIRM</span> <span class="o">:</span> <span class="s2">&quot;确认&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java EE 7中对WebSocket 1.0的支持]]></title>
    <link href="http://sargeraswang.com/blog/2014/11/14/java-ee-7zhong-dui-websocket-1-dot-0de-zhi-chi/"/>
    <updated>2014-11-14T14:24:00+08:00</updated>
    <id>http://sargeraswang.com/blog/2014/11/14/java-ee-7zhong-dui-websocket-1-dot-0de-zhi-chi</id>
    <content type="html"><![CDATA[<blockquote><p>非原创,原文链接：<a href="http://www.javaarch.net/jiagoushi/749.htm">http://www.javaarch.net/jiagoushi/749.htm</a>
原文打不开,所以贴到这里.</p></blockquote>

<h4>需要tomcat 7.0.50 及以上版本才支持</h4>

<p><img src="http://sargeraswang.com/images/blog_img/webSocket/tomcat.png" alt="" /></p>

<h4>resin 可能5.0以上才可以</h4>

<p><img src="http://sargeraswang.com/images/blog_img/webSocket/resin.png" alt="" /></p>

<p>否则浏览器的console会出现如下错误:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>WebSocket connection to 'ws://127.0.0.1:8080/xxx/yyy' failed: Error during WebSocket handshake: Unexpected response code: 404</span></code></pre></td></tr></table></div></figure>


<h2>server端</h2>

<h4>pom依赖:</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>    <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>        <span class="nt">&lt;groupId&gt;</span>javax<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;artifactId&gt;</span>javaee-api<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;version&gt;</span>7.0-b82<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>        <span class="nt">&lt;scope&gt;</span>provided<span class="nt">&lt;/scope&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/dependency&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>src/main/java/com/hmkcode/MyServerEndpoint.java</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>    <span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">hmkcode</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">java.util.LinkedList</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">javax.websocket.EncodeException</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">javax.websocket.OnClose</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">javax.websocket.OnMessage</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">javax.websocket.OnOpen</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">javax.websocket.Session</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">javax.websocket.server.PathParam</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">javax.websocket.server.ServerEndpoint</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@ServerEndpoint</span><span class="o">(</span><span class="n">value</span><span class="o">=</span><span class="s">&quot;/websocket/{client-id}&quot;</span><span class="o">)</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">class</span> <span class="nc">MyServerEndpoint</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">LinkedList</span><span class="o">&lt;</span><span class="n">Session</span><span class="o">&gt;</span> <span class="n">clients</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LinkedList</span><span class="o">&lt;</span><span class="n">Session</span><span class="o">&gt;();</span>
</span><span class='line'>
</span><span class='line'>        <span class="nd">@OnOpen</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onOpen</span><span class="o">(</span><span class="n">Session</span> <span class="n">session</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">clients</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">session</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="nd">@OnMessage</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onMessage</span><span class="o">(</span><span class="n">String</span> <span class="n">message</span><span class="o">,</span><span class="nd">@PathParam</span><span class="o">(</span><span class="s">&quot;client-id&quot;</span><span class="o">)</span> <span class="n">String</span> <span class="n">clientId</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">for</span> <span class="o">(</span><span class="n">Session</span> <span class="n">client</span> <span class="o">:</span> <span class="n">clients</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">client</span><span class="o">.</span><span class="na">getBasicRemote</span><span class="o">().</span><span class="na">sendObject</span><span class="o">(</span><span class="n">clientId</span><span class="o">+</span><span class="s">&quot;: &quot;</span><span class="o">+</span><span class="n">message</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">EncodeException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="nd">@OnClose</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClose</span><span class="o">(</span><span class="n">Session</span> <span class="n">peer</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">clients</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">peer</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<p><code>@ServerEndpoint(value=”/websocket/{client-id}”)</code>是client连接的url地址，<code>{client-id}</code>是每个client连接的名称标识。<br/>
<code>@onOpen</code>，<code>@onMessag</code>和<code>@onClose</code>是对应的每个session连接生命周期的回调函数</p>

<h2>websocket客户端(桌面端)</h2>

<h4>pom依赖：</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>    <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>        <span class="nt">&lt;groupId&gt;</span>javax<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;artifactId&gt;</span>javaee-api<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;version&gt;</span>7.0-b82<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>    <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>        <span class="nt">&lt;groupId&gt;</span>org.glassfish.tyrus<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;artifactId&gt;</span>tyrus-client<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;version&gt;</span>1.0-rc3<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>    <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>        <span class="nt">&lt;groupId&gt;</span>org.glassfish.tyrus<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;artifactId&gt;</span>tyrus-container-grizzly<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;version&gt;</span>1.0-rc3<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/dependency&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>src/main/java/com/hmkcode/MyClient.java</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>
</span><span class='line'>    <span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">hmkcode</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">javax.websocket.ClientEndpoint</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">javax.websocket.OnError</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">javax.websocket.OnMessage</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">javax.websocket.OnOpen</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">javax.websocket.Session</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@ClientEndpoint</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">class</span> <span class="nc">MyClient</span> <span class="o">{</span>
</span><span class='line'>        <span class="nd">@OnOpen</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onOpen</span><span class="o">(</span><span class="n">Session</span> <span class="n">session</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Connected to endpoint: &quot;</span> <span class="o">+</span> <span class="n">session</span><span class="o">.</span><span class="na">getBasicRemote</span><span class="o">());</span>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">session</span><span class="o">.</span><span class="na">getBasicRemote</span><span class="o">().</span><span class="na">sendText</span><span class="o">(</span><span class="s">&quot;Hello&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="nd">@OnMessage</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onMessage</span><span class="o">(</span><span class="n">String</span> <span class="n">message</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">message</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="nd">@OnError</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onError</span><span class="o">(</span><span class="n">Throwable</span> <span class="n">t</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">t</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>src/main/java/com/hmkcode/App.java</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>    <span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">hmkcode</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">java.net.URI</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">javax.websocket.ContainerProvider</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">javax.websocket.DeploymentException</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">javax.websocket.Session</span><span class="o">;</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">javax.websocket.WebSocketContainer</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">class</span> <span class="nc">App</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">public</span> <span class="n">Session</span> <span class="n">session</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">start</span><span class="o">()</span>
</span><span class='line'>                 <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">WebSocketContainer</span> <span class="n">container</span> <span class="o">=</span> <span class="n">ContainerProvider</span><span class="o">.</span><span class="na">getWebSocketContainer</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">String</span> <span class="n">uri</span> <span class="o">=</span> <span class="s">&quot;ws://localhost:8080/websocket-glassfish-server/websocket/desktop-client&quot;</span><span class="o">;</span>
</span><span class='line'>                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Connecting to &quot;</span> <span class="o">+</span> <span class="n">uri</span><span class="o">);</span>
</span><span class='line'>                <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">session</span> <span class="o">=</span> <span class="n">container</span><span class="o">.</span><span class="na">connectToServer</span><span class="o">(</span><span class="n">MyClient</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">URI</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="n">uri</span><span class="o">));</span>
</span><span class='line'>                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">DeploymentException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span> <span class="n">args</span><span class="o">[]){</span>
</span><span class='line'>            <span class="n">App</span> <span class="n">client</span> <span class="o">=</span> <span class="k">new</span> <span class="n">App</span><span class="o">();</span>
</span><span class='line'>            <span class="n">client</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="n">InputStreamReader</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
</span><span class='line'>            <span class="n">String</span> <span class="n">input</span> <span class="o">=</span> <span class="s">&quot;&quot;</span><span class="o">;</span>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">do</span><span class="o">{</span>
</span><span class='line'>                    <span class="n">input</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
</span><span class='line'>                    <span class="k">if</span><span class="o">(!</span><span class="n">input</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">&quot;exit&quot;</span><span class="o">))</span>
</span><span class='line'>                        <span class="n">client</span><span class="o">.</span><span class="na">session</span><span class="o">.</span><span class="na">getBasicRemote</span><span class="o">().</span><span class="na">sendText</span><span class="o">(</span><span class="n">input</span><span class="o">);</span><span class="c1">//发送消息</span>
</span><span class='line'>
</span><span class='line'>                <span class="o">}</span><span class="k">while</span><span class="o">(!</span><span class="n">input</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">&quot;exit&quot;</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// TODO Auto-generated catch block  </span>
</span><span class='line'>                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>websocket客户端(web )</h2>

<h4>/src/main/webapp/index.htm</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>    <span class="cp">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;</span>
</span><span class='line'>    <span class="nt">&lt;html</span> <span class="na">xmlns=</span><span class="s">&quot;http://www.w3.org/1999/xhtml&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;head&gt;</span>
</span><span class='line'>    <span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">&quot;Content-Type&quot;</span> <span class="na">content=</span><span class="s">&quot;text/html; charset=utf-8&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;title&gt;</span>Java API for WebSocket (JSR-356)<span class="nt">&lt;/title&gt;</span>
</span><span class='line'>    <span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">&quot;bootstrap/css/bootstrap.min.css&quot;</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">type=</span><span class="s">&quot;text/css&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;http://code.jquery.com/jquery-1.9.1.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>    <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;websocket.js&quot;</span> <span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/head&gt;</span>
</span><span class='line'>    <span class="nt">&lt;body&gt;</span>
</span><span class='line'>        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;container&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;h1&gt;</span>Java API for WebSocket (JSR-356)<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>            <span class="nt">&lt;div&gt;</span>
</span><span class='line'>                <span class="nt">&lt;span</span> <span class="na">id=</span><span class="s">&quot;status&quot;</span> <span class="na">class=</span><span class="s">&quot;label label-important&quot;</span><span class="nt">&gt;</span>Not Connected<span class="nt">&lt;/span&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>            <span class="nt">&lt;br/&gt;</span>
</span><span class='line'>
</span><span class='line'>            <span class="nt">&lt;label</span> <span class="na">style=</span><span class="s">&quot;display:inline-block&quot;</span><span class="nt">&gt;</span>Message: <span class="nt">&lt;/label&gt;&lt;input</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">id=</span><span class="s">&quot;message&quot;</span>  <span class="nt">/&gt;</span>
</span><span class='line'>            <span class="nt">&lt;button</span> <span class="na">id=</span><span class="s">&quot;send&quot;</span> <span class="na">class=</span><span class="s">&quot;btn btn-primary&quot;</span> <span class="na">onclick=</span><span class="s">&quot;sendMessage()&quot;</span><span class="nt">&gt;</span>Send<span class="nt">&lt;/button&gt;</span>
</span><span class='line'>
</span><span class='line'>            <span class="nt">&lt;table</span> <span class="na">id=</span><span class="s">&quot;received_messages&quot;</span> <span class="na">class=</span><span class="s">&quot;table table-striped&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                <span class="nt">&lt;tr&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;th&gt;</span>#<span class="nt">&lt;/th&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;th&gt;</span>Sender<span class="nt">&lt;/th&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;th&gt;</span>Message<span class="nt">&lt;/th&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/tr&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/table&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/body&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>/src/main/webapp/websocket.js</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">URL</span> <span class="o">=</span> <span class="s2">&quot;ws://localhost:8080/websocket-glassfish-server/websocket/web-client&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">websocket</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>        <span class="nx">connect</span><span class="p">();</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">function</span> <span class="nx">connect</span><span class="p">(){</span>
</span><span class='line'>            <span class="nx">websocket</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">WebSocket</span><span class="p">(</span><span class="nx">URL</span><span class="p">);</span>
</span><span class='line'>            <span class="nx">websocket</span><span class="p">.</span><span class="nx">onopen</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">evnt</span><span class="p">)</span> <span class="p">{</span> <span class="nx">onOpen</span><span class="p">(</span><span class="nx">evnt</span><span class="p">)</span> <span class="p">};</span>
</span><span class='line'>            <span class="nx">websocket</span><span class="p">.</span><span class="nx">onmessage</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">evnt</span><span class="p">)</span> <span class="p">{</span> <span class="nx">onMessage</span><span class="p">(</span><span class="nx">evnt</span><span class="p">)</span> <span class="p">};</span>
</span><span class='line'>            <span class="nx">websocket</span><span class="p">.</span><span class="nx">onerror</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">evnt</span><span class="p">)</span> <span class="p">{</span> <span class="nx">onError</span><span class="p">(</span><span class="nx">evnt</span><span class="p">)</span> <span class="p">};</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="kd">function</span> <span class="nx">sendMessage</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">websocket</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#message&quot;</span><span class="p">).</span><span class="nx">val</span><span class="p">());</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="kd">function</span> <span class="nx">onOpen</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">updateStatus</span><span class="p">(</span><span class="s2">&quot;connected&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="kd">function</span> <span class="nx">onMessage</span><span class="p">(</span><span class="nx">evnt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="k">typeof</span> <span class="nx">evnt</span><span class="p">.</span><span class="nx">data</span> <span class="o">==</span> <span class="s2">&quot;string&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#received_messages&quot;</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span>
</span><span class='line'>                            <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;&lt;tr/&gt;&#39;</span><span class="p">)</span>
</span><span class='line'>                            <span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;&lt;td/&gt;&#39;</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="s2">&quot;1&quot;</span><span class="p">))</span>
</span><span class='line'>                            <span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;&lt;td/&gt;&#39;</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="nx">evnt</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">evnt</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;:&quot;</span><span class="p">))))</span>
</span><span class='line'>                            <span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;&lt;td/&gt;&#39;</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="nx">evnt</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">evnt</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;:&quot;</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">))));</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="kd">function</span> <span class="nx">onError</span><span class="p">(</span><span class="nx">evnt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">alert</span><span class="p">(</span><span class="s1">&#39;ERROR: &#39;</span> <span class="o">+</span> <span class="nx">evnt</span><span class="p">.</span><span class="nx">data</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="kd">function</span> <span class="nx">updateStatus</span><span class="p">(</span><span class="nx">status</span><span class="p">){</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="nx">status</span> <span class="o">==</span> <span class="s2">&quot;connected&quot;</span><span class="p">){</span>
</span><span class='line'>            <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#status&quot;</span><span class="p">).</span><span class="nx">removeClass</span> <span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">index</span><span class="p">,</span> <span class="nx">css</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>               <span class="k">return</span> <span class="p">(</span><span class="nx">css</span><span class="p">.</span><span class="nx">match</span> <span class="p">(</span><span class="sr">/\blabel-\S+/g</span><span class="p">)</span> <span class="o">||</span> <span class="p">[]).</span><span class="nx">join</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span>
</span><span class='line'>            <span class="p">});</span>
</span><span class='line'>            <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#status&quot;</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="nx">status</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;label-success&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ER/Studio for mac 移植版制作教程与下载]]></title>
    <link href="http://sargeraswang.com/blog/2014/10/14/er-slash-studio-for-mac-yi-zhi-ban-zhi-zuo-jiao-cheng-yu-xia-zai/"/>
    <updated>2014-10-14T11:24:00+08:00</updated>
    <id>http://sargeraswang.com/blog/2014/10/14/er-slash-studio-for-mac-yi-zhi-ban-zhi-zuo-jiao-cheng-yu-xia-zai</id>
    <content type="html"><![CDATA[<p>先上图:<br/>
<img src="http://sargeraswang.com/images/blog_img/erstudio/new.png" alt="" /></p>

<h3>原理</h3>

<p>使用<a href="http://wineskin.urgesoftware.com/tiki-index.php">Wineskin</a>安装一个Windows的ER/Studio</p>

<h3>步骤</h3>

<ol>
<li>下载wineskin,地址<a href="http://wineskin.urgesoftware.com/tiki-index.php?page=Downloads">http://wineskin.urgesoftware.com/tiki-index.php?page=Downloads</a></li>
<li>运行wineskin,点击加号[+],新增一个engine,我用的是<code>WS9Wine 1.7.28</code>,点击[Download And Install].</li>
</ol>


<!-- more -->


<p><img src="http://sargeraswang.com/images/blog_img/erstudio/wine1.png" alt="" />
<img src="http://sargeraswang.com/images/blog_img/erstudio/wine2.png" alt="" /><br/>
3. 使用上一步安装的engine创建一个应用,点击<code>Create New Blank Wrapper</code>,输入一个名字,比方说<code>"ERStudio"</code>,<strong>注意不要用<code>"ER/Studio"</code>,貌似斜杠会影响文件的创建</strong>.,创建好后会弹出一个提示,问是否要安装<code>.NET</code>,点取消,又一个提示是否安装<code>HTML</code>,也取消,再稍等一下.会告诉你创建完成了,然后点击<code>View wrapper in Finder</code>.<br/>
<img src="http://sargeraswang.com/images/blog_img/erstudio/alert1.png" alt="" />
<img src="http://sargeraswang.com/images/blog_img/erstudio/alert2.png" alt="" />
<img src="http://sargeraswang.com/images/blog_img/erstudio/alert3.png" alt="" /><br/>
4. 右键xxxx.app->显示包内容,运行<code>Wineskin.app</code>.点击<code>Install Software</code>&ndash;><code>Choose Setup Executable</code>,选择ER/Studio的EXE安装程序(<a href="http://pan.baidu.com/wap/shareview?&amp;shareid=1817104890&amp;uk=2336093466&amp;dir=%2F%E5%88%86%E4%BA%AB%2Fsoftwave%2FERStudio8&amp;page=1&amp;num=20&amp;fsid=4244204594&amp;third=4">下载地址</a>),下一步..下一步..下一步&hellip;&hellip;安装完成.<br/>
<img src="http://sargeraswang.com/images/blog_img/erstudio/install1.png" alt="" />
<img src="http://sargeraswang.com/images/blog_img/erstudio/install2.png" alt="" /><br/>
5. 下载破解文件(<a href="http://pan.baidu.com/wap/shareview?&amp;shareid=1817104890&amp;uk=2336093466&amp;dir=%2F%E5%88%86%E4%BA%AB%2Fsoftwave%2FERStudio8&amp;page=1&amp;num=20&amp;fsid=1394660492&amp;third=4">下载地址</a>),把解压出来的破解工具<code>3ddown.com_patch_setup.exe</code>放在ER/Studio的安装目录下<code>ERStudio.app/Contents/Resources/drive_c/Program Files/Embarcadero/ERStudio8.0/3ddown.com_patch_setup.exe</code>.然后到上层找到<code>Wineskin</code>运行,选择<code>Advanced</code>,在<code>Windows EXE</code>选择刚才的<code>3ddown.com_patch_setup.exe</code>文件.点击<code>Test Run</code>,运行破解.
<img src="http://sargeraswang.com/images/blog_img/erstudio/keygen.png" alt="" /><br/>
6. 还是在上一步的<code>Windows EXE</code>,选择ER/Studio的运行文件<code>/Program Files/Embarcadero/ERStudio8.0/ERSTUDIO.exe</code>.测试一下是否可以运行,点击<code>Test Run</code>.<br/>
7. 修改图标,我从<code>ERSTUDIO.exe</code>里提取出来的icon.<a href="http://sargeraswang.com/images/blog_img/erstudio/icon.icns">下载地址</a>,替换上即可.</p>

<h3>使用须知</h3>

<p><del>由于这种方式的原理是虚拟了一个windows环境,所以这个应用无法读取到应用之外的文件,想要打开ER图,可以把图放在<code>ERStudio.app/Contents/Resources/drive_c/</code>下面,例如我们ER图放在SVN上,直接把ER图的文件夹CheckOut到这里.</del></p>

<p>应用第一次启动,会在你的<code>文稿</code>目录中创建一个<code>ERStudio8.0</code>文件夹,把ER图放这里就好,其实应用可以访问到整个<code>文稿</code>文件夹.</p>

<h3>完整版下载</h3>

<p>百度云下载:<a href="http://yun.baidu.com/share/link?shareid=1037072841&amp;uk=1309001135">http://yun.baidu.com/share/link?shareid=1037072841&amp;uk=1309001135</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[office for mac word 设置每页行数与每行字数(指定行网格和字符网格)]]></title>
    <link href="http://sargeraswang.com/blog/2014/10/09/office-for-mac-word-she-zhi-mei-ye-xing-shu-yu-mei-xing-zi-shu-zhi-ding-xing-wang-ge-he-zi-fu-wang-ge/"/>
    <updated>2014-10-09T09:35:00+08:00</updated>
    <id>http://sargeraswang.com/blog/2014/10/09/office-for-mac-word-she-zhi-mei-ye-xing-shu-yu-mei-xing-zi-shu-zhi-ding-xing-wang-ge-he-zi-fu-wang-ge</id>
    <content type="html"><![CDATA[<p>毕业论文要求格式之一是,每行30字,每页25行.查到windows下word中的设置在<code>文件</code>——<code>页面设置</code>——<code>在网格选择“指定行和字符网络”</code>,可mac版中没有这个选项,经过挨个排查,找到这项设置在<code>文件</code>&ndash;><code>页面设置</code>&ndash;><code>[设置]下拉选择[Microsoft Word]</code>&ndash;><code>页边距</code>&ndash;><code>文档网格</code>&ndash;><code>指定行网格和字符网格</code>,然后在下方输入每页多少行,每行多少字.</p>

<!-- more -->


<p><img src="http://sargeraswang.com/images/blog_img/word_col_row.png" alt="" /></p>

<p>使用后发现,明明设置每行30字,可实际总是在20字左右,行数也不对.测试后发现:</p>

<ol>
<li>每行字数不正确的,是由于在<code>字体...</code>中设置过<code>字符间距</code>,解决办法就是选中文字,点击<code>格式</code>&ndash;><code>字体...</code>&ndash;><code>高级</code>修改<code>间距</code>为<code>常规</code>,<code>位置</code>为<code>常规</code>.如下图:  <br/>
<img src="http://sargeraswang.com/images/blog_img/word_col.png" alt="" /></li>
<li>每页行数不正确的,是由于设置过<code>行间距</code>,解决办法是选中文字,点击<code>格式</code>&ndash;><code>段落...</code>&ndash;><code>间距</code>,<code>行距</code>设置为默认的<code>单倍行距</code>.如下图:  <br/>
<img src="http://sargeraswang.com/images/blog_img/word_row.png" alt="" /></li>
</ol>


<h5>大功告成!</h5>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac下使用的二维码扫描工具并且可以直接识别图片中的二维码 QR Journal]]></title>
    <link href="http://sargeraswang.com/blog/2014/09/25/macxia-shi-yong-de-er-wei-ma-sao-miao-gong-ju-bing-qie-ke-yi-zhi-jie-shi-bie-tu-pian-zhong-de-er-wei-ma/"/>
    <updated>2014-09-25T10:22:00+08:00</updated>
    <id>http://sargeraswang.com/blog/2014/09/25/macxia-shi-yong-de-er-wei-ma-sao-miao-gong-ju-bing-qie-ke-yi-zhi-jie-shi-bie-tu-pian-zhong-de-er-wei-ma</id>
    <content type="html"><![CDATA[<p>QR Journal:<a href="http://www.macupdate.com/app/mac/41127/qr-journal">下载地址</a></p>

<h4>使用方法:</h4>

<ol>
<li><p>用摄像头扫描,点击<code>Scan</code>按钮进行.</p></li>
<li><p>读取本机图片,点击<code>Import</code>按钮,将本机图片文件拖入弹出框中</p></li>
</ol>


<!--more-->


<p><img src="http://sargeraswang.com/images/blog_img/QR_Journal.png" alt="" />
<img src="http://sargeraswang.com/images/blog_img/QR_Journal2.png" alt="" /></p>

<p><strong>手机照的照片包含二维码,用这个工具貌似扫不出来</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[com.atomikos.icatch.SysException:Error in init(): Log already in use? 的另一种原因]]></title>
    <link href="http://sargeraswang.com/blog/2014/09/24/com-dot-atomikos-dot-icatch-dot-sysexception-error-in-init-log-already-in-use-de-ling-chong-yuan-yin/"/>
    <updated>2014-09-24T16:07:00+08:00</updated>
    <id>http://sargeraswang.com/blog/2014/09/24/com-dot-atomikos-dot-icatch-dot-sysexception-error-in-init-log-already-in-use-de-ling-chong-yuan-yin</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Error setting property values; nested exception is org.springframework.beans.PropertyBatchUpdateException;
</span><span class='line'>nested PropertyAccessExceptions (1) are:
</span><span class='line'>PropertyAccessException 1: org.springframework.beans.MethodInvocationException:
</span><span class='line'>Property 'transactionTimeout' threw exception; nested exception is com.atomikos.icatch.SysException:
</span><span class='line'>Error in init(): Log already in use?
</span><span class='line'>  at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:289)
</span><span class='line'>  at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1147)
</span><span class='line'>  at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
</span></code></pre></td></tr></table></div></figure>


<p>今天突然发生了这奇怪的事情,前两天服务器还很好,今天就抛出这个异常了.</p>

<p>首先,想起来同事曾经遇到过<code>Log already in use</code>的问题,是因为同一个项目启动了两次,检查服务器后发现就启动了一次,不是这个原因.<strong>还有一个重点,我本机(MacBook)和同事的机器(windows)启动都没有这个问题,就服务器(linux)会有.</strong></p>

<!--more-->


<p>马上去Google,网上说法总结为两个原因:</p>

<ol>
<li>一个项目,已经启动了,再次启动的时候报错.

<ul>
<li>解决办法:停止已启动的实例,再启动.</li>
</ul>
</li>
<li>同一个环境中存在多个这种使用jta的项目,启动第二/三/四&hellip;个的时候.

<ul>
<li>解决办法:为每个项目配置使用不同的log文件,如下</li>
</ul>
</li>
</ol>


<p>jta.properties</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='properties'><span class='line'><span class="c">#项目一</span>
</span><span class='line'><span class="na">com.atomikos.icatch.console_file_name</span> <span class="o">=</span> <span class="s">rm1.out</span>
</span><span class='line'><span class="na">com.atomikos.icatch.log_base_name</span> <span class="o">=</span> <span class="s">rmlog1.log</span>
</span></code></pre></td></tr></table></div></figure>


<p>jta.properties</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='properties'><span class='line'><span class="c">#项目二</span>
</span><span class='line'><span class="na">com.atomikos.icatch.console_file_name</span> <span class="o">=</span> <span class="s">rm2.out</span>
</span><span class='line'><span class="na">com.atomikos.icatch.log_base_name</span> <span class="o">=</span> <span class="s">rmlog2.log</span>
</span></code></pre></td></tr></table></div></figure>


<p>但是,经过尝试,均无法解决问题.然后尝试本机搜索了一下<code>rmlog2.log</code>,结果发现在resin根目录下有.就去服务器看,结果没有.马上脑洞大开,<strong>会不会是因为权限??</strong></p>

<p>结果,&ldquo;what f*ck&rdquo;,就是权限的问题.因为昨天同事把resin目录的普通用户的写权限给禁用了.</p>

<h3>解决办法:配置log文件为绝对路径(要有权限)</h3>

<p>jta.properties</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='properties'><span class='line'><span class="na">com.atomikos.icatch.service</span><span class="o">=</span><span class="s">com.atomikos.icatch.standalone.UserTransactionServiceFactory</span>
</span><span class='line'><span class="na">com.atomikos.icatch.output_dir</span><span class="o">=</span><span class="s">/data/logs/xxx/</span>
</span><span class='line'><span class="na">com.atomikos.icatch.log_base_dir</span><span class="o">=</span><span class="s">/data/logs/xxx/</span>
</span><span class='line'><span class="na">com.atomikos.icatch.console_file_name</span> <span class="o">=</span> <span class="s">tm.out   </span>
</span><span class='line'><span class="na">com.atomikos.icatch.log_base_name</span> <span class="o">=</span> <span class="s">tm.log    </span>
</span><span class='line'><span class="na">com.atomikos.icatch.max_timeout</span> <span class="o">=</span> <span class="s">300000</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mysql  /usr/local/mysql/bin/mysqld: unknown variable default-character-set=utf8 解决办法]]></title>
    <link href="http://sargeraswang.com/blog/2014/08/20/mysql-slash-usr-slash-local-slash-mysql-slash-bin-slash-mysqld-unknown-variable-default-character-set-equals-utf8-jie-jue-ban-fa/"/>
    <updated>2014-08-20T20:21:00+08:00</updated>
    <id>http://sargeraswang.com/blog/2014/08/20/mysql-slash-usr-slash-local-slash-mysql-slash-bin-slash-mysqld-unknown-variable-default-character-set-equals-utf8-jie-jue-ban-fa</id>
    <content type="html"><![CDATA[<p>为了修改mysql默认字符集,按照网上的方式,修改了<code>my.cnf</code>,之后启动mysql报错:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> [ERROR] /usr/local/mysql/bin/mysqld: unknown variable
</span><span class='line'> 'default-character-set=utf8'
</span></code></pre></td></tr></table></div></figure>


<!-- more -->


<p>后来Google到<a href="http://lists.mysql.com/mysql/226319">官网的这篇文章</a>.</p>

<p>其中说道:</p>

<p><code>The above link says default-character-set is depreciated and you should
be   using  character-set-server. It also states default-character-set
was removed in v5.5.3.</code></p>

<p>解决方法:把<code>my.cnf</code> 中的</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>default-character-set=utf8</span></code></pre></td></tr></table></div></figure>


<p>修改为</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>character-set-server=utf8</span></code></pre></td></tr></table></div></figure>


<p>成功启动mysql.</p>

<p><img src="http://sargeraswang.com/images/blog_img/mysql_status.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac 下 Eclipse 使用Emac按键的设置]]></title>
    <link href="http://sargeraswang.com/blog/2014/05/09/mac-xia-eclipse-shi-yong-emacan-jian-de-she-zhi/"/>
    <updated>2014-05-09T16:41:00+08:00</updated>
    <id>http://sargeraswang.com/blog/2014/05/09/mac-xia-eclipse-shi-yong-emacan-jian-de-she-zhi</id>
    <content type="html"><![CDATA[<!--test -->


<blockquote><p>来填坑了，当初自己写下的文字果然力量非凡，原先就是因为不喜欢在编码时，总是需要右手离开主键盘区，找方向键来控制光标而烦恼，所以学了emacs。但是eclipse的emacs键位并不怎么好用，所以本文是记录如何设置eclipse的光标控制。<strong>好吧，主要是填坑<a href="http://sargeraswang.com/blog/2013/11/29/10pian-vs19tian-bo-ke-zhuan-xie-xiao-jie/">10篇vs19天博客撰写小结</a></strong></p></blockquote>

<!-- more -->


<h3>需要什么</h3>

<p>首先要分析需求，很简单，我不想让右手离开主键位区，去找上下左右按键。</p>

<p>那么，我需要能修改以下按键 ：</p>

<ul>
<li>上</li>
<li>下</li>
<li>左</li>
<li>右</li>
<li>行头</li>
<li>行尾</li>
</ul>


<h3>Keys很强大</h3>

<ol>
<li>去 eclipse->Preferences (快捷键 <code>Commend+，</code>)，filter中输入<code>Kyes</code>.
<img src="http://sargeraswang.com/images/blog_img/eclipse_keys.png" alt="" /></li>
<li>设置以下按键

<ul>
<li>上 <code>Line Up</code> 为 <code>Ctrl+P</code></li>
<li>下 <code>Line Down</code> 为 <code>Ctrl+N</code></li>
<li>左 <code>Previous Column</code> 为 <code>Ctrl+B</code></li>
<li>右 <code>Next Column</code> 为 <code>Ctrl+F</code></li>
<li>行头 <code>Line Start</code> 为 <code>Ctrl+A</code></li>
<li>行尾 <code>Line End</code> 为 <code>Ctrl+E</code><br/>
<img src="http://sargeraswang.com/images/blog_img/eclipse_keys2.png" alt="" /></li>
</ul>
</li>
</ol>


<h3>OK了，解放你的右胳膊吧</h3>

<p>之所以现在才写这篇，是因为我一直认为<code>左</code>和<code>右</code>应该是<code>Back</code>和<code>Forward</code>,一直无法使用，甚是恼火，直到我看了eclipse自带的emacs按键方案。</p>

<p><img src="http://sargeraswang.com/images/blog_img/eclipse_keys3.png" alt="" /></p>

<blockquote><p>哈，到现在，当初的坑就剩下最后一个了 <strong>使用maven搭建SSH框架</strong></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[花信之年-二十四岁]]></title>
    <link href="http://sargeraswang.com/blog/2014/03/25/hua-xin-zhi-nian-er-shi-si-sui/"/>
    <updated>2014-03-25T21:00:00+08:00</updated>
    <id>http://sargeraswang.com/blog/2014/03/25/hua-xin-zhi-nian-er-shi-si-sui</id>
    <content type="html"><![CDATA[<blockquote><p>有人问过我在外边闯荡会有孤单的感觉吗，我说不会，现在，我要证明这一点！
就像过24岁生日这天，我也并不孤单，有QQ邮箱和招商银行惦记着我！</p></blockquote>

<p>上班听了一天的水手，与十年前初次听的时候，感觉完全不同，当时更在意“风雨中这点痛算什么，至少我们还有
梦”，而现在更能理解“总是拿着微不足道的成就来骗自己，总是莫名其妙感到一阵的空虚”&hellip;</p>

<!-- more -->


<p><img src="http://sargeraswang.com/images/blog_img/24.jpg" alt="" /></p>

<h3>你变态了！</h3>

<p>“人总是在追逐稳定的同时追求刺激”，忘记是哪位名人说过的。而像我这个年纪，或许追逐刺激更多一些。回想近几年，自己在各方面都有成长，但总是嫌弃自己成长的太慢了。前同事说“你跟我们不是一类人，你已经变态了”，这应该就是快速成长的负面效果。当绝大部分的时间和精力都放在思考如何提高自己的专业能力，然后按照计划去做时，旁边的人会感觉你越来越没有“人性”，也就是“变态了”。</p>

<p>在我看来，这也是无法避免的，假设从程度1到程度8需要学习1000个小时，我的目标又是最短时间内达到程度8，那就抛弃其他时间，全心全意投入到学习中。人这一生中就是不断地做选择，而选择就是一个取舍的问题，既然取了技术，就要舍去那些能让你保持“正常”的能力。</p>

<h3>宣布目标的魔力</h3>

<p>路飞的梦想是成为海贼王，鸣人的目标是成为火影，东方不败的目标是成为天下第一。向身边的人宣传自己的梦想和目标，有着非凡的魔力，有一种自外而内能量在影响着自己。再加上发自内心的对梦想的向往，两种能量融会贯通。</p>

<p>最直接的就是，身边总是有人在你做事不够完美时会说“你不是要成为XXX的男人吗，这事怎么都做不好？”，这绝对不是挖苦，不是讽刺；而是赤裸裸的鼓励啊有木有，监督啊有木有。而我面对这样的鼓励时，总是报以感谢，然后把事情做好。再接下来，对方看到了你有听他的话，感受到了你对他的建议的重视程度，下次才会继续提出你的不足。如此下去，良性循环，皆大欢喜。</p>

<h3>你是否会后悔</h3>

<p>上面说到人生就是不断地做出选择，那我平时又是如何做出选择的呢。</p>

<ol>
<li>列出目前的选择，排除一轮不靠谱的，就是白给你都不选的.</li>
<li>把每个选择的成本、风险、收益列出来比较</li>
<li>当第二点做完后，还是无法抉择，那就使出杀手锏：<strong>哪个选择在几十年以后，回想起来，才不会后悔</strong>。</li>
<li>没有第四了，丢硬币吧骚年。</li>
</ol>


<p>当你七老八十，坐在摇椅上看《火影忍者》第20000话的时候，想到自己随时都可能老死，再回想自己的一生，无怨无悔，为自己的梦想计划了，努力了，坚持了&hellip;就可以闭上眼睛，心想“我操，火影的结局到底是啥！”</p>

<h3>直面内心的自己</h3>

<p>《自控力》对我的影响，从外层看是自控力的提升，从内在讲，更多的是不要欺骗自己，不要逃避自己，要直面自己内心深处。人天生就有欺骗自己的能力，因为生存下去是第一目标，所以可以骗自己没有看到受伤的同伴，骗自己明天可以打到更多的猎物。</p>

<p>没错，这些能力可以让你活下去的概率大大的提高，但是现在，你的目标就只是活着吗？如果不能分析自己的大脑，只能被自己骗。就像减肥一样，人天生就有对脂肪的渴望，当你靠近它们的时候，大脑会骗你“你现在很需要这块蛋糕，它可以提高你活下去的几率”，如果认识不到自己被自己的大脑骗了，那永远都无法减肥；戒烟同理。</p>

<p>上班时，自己已经提前完成了预定任务，看到别的同事在闲玩。你的大脑就会告诉你“你现在很累了，要劳逸结合，再说了，别人都在休息，你还那么努力，就吃亏了”，这个时候，你应该做的是告诉你的大脑：”草！老子怎么会就这点儿能耐，这TM能叫努力吗？比别人少休息哪能叫吃亏，真是被门挤了！“，如此长久，你就战胜了那个骗子.</p>

<blockquote><p>花信：开花时期，花期。指女子的年龄到了二十四岁。也泛指女子正处年轻貌美之时。高阳《胡雪岩全传·平步青云》上册：“而且正当花信年华，就如秋月将满，春花方盛，令人一见便觉不可错过。”</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Emacs使用手册(二) 使用进阶]]></title>
    <link href="http://sargeraswang.com/blog/2014/03/18/emacsshi-yong-shou-ce-er-shi-yong-jin-jie/"/>
    <updated>2014-03-18T19:55:00+08:00</updated>
    <id>http://sargeraswang.com/blog/2014/03/18/emacsshi-yong-shou-ce-er-shi-yong-jin-jie</id>
    <content type="html"><![CDATA[<blockquote><p>一个多月没有写东西了，这期间发生了很多事，年初定的换工作的目标达成，收获颇丰。 <br/>
“外面的世界很精彩&hellip;外面的世界很无奈&hellip;北京&hellip;北京&hellip;”<br/>
哈，没那么文艺，新的城市，新的公司，新的开始，我还是不够努力，奔跑吧！少年！</p></blockquote>

<!-- more -->


<h3>被禁用的命令</h3>

<p>有一些 Emacs 命令被“禁用”了，以避免初学者误用，当你使用到了一个被禁用的命令，Emacs 会显示一个提示消息，告诉你这个命令到底是干什么的，询问你是否要继续，并在得到你的肯定后再执行这命令。</p>

<ul>
<li>如果你确定要执行，就按下空格</li>
<li>如果你不想用，就按下“n”

<blockquote><p>试试 Ctrl+x Ctrl+l<br/>
<img src="http://sargeraswang.com/images/blog_img/emacs/c_x_c_l.png" alt="" /></p></blockquote></li>
</ul>


<h3>窗格（WINDOWS）</h3>

<p>Emacs 可以有多个窗格，每个窗格显示不同的文字。</p>

<ul>
<li>关掉多余的窗格 <code>Ctrl+x 1</code></li>
<li>切换为2个窗口：

<ul>
<li>上下拆分<code>ctrl+x 2</code></li>
<li>左右拆分<code>ctrl+x 3</code><br/>
<img src="http://sargeraswang.com/images/blog_img/emacs/subWindow.png" alt="" /></li>
</ul>
</li>
<li>多窗口间切换光标 <code>ctrl+x o</code> <strong>这里o代表other</strong></li>
<li>滚动另外一个画面 <code>alt+ctrl+v</code></li>
<li>开启新窗口并打开指定文件 <code>ctrl+x 4 ctrl+f 文件名</code>

<blockquote><p>这个命令跟之前的命令不太一样，包含了两个字符，以Ctrl+x开始，有一系列命令都是以Ctrl+x开始的，许多都跟“窗格、文件、缓冲区”等有关，其中有些命令可能包含了2个、3个、4个字符。</p></blockquote></li>
</ul>


<h3>插入与删除</h3>

<ul>
<li>插入文字很简单，直接敲键盘就可以了。</li>
<li>删除前一个字符，用<code>Delete</code>，与 Emacs 之外的用法一样。</li>
<li>如果一行中文字显示不下，需要换行，那么：

<ul>
<li>在console下会有反斜杠<code>\</code>出现</li>
<li>在图形窗口中会有小小的转弯箭头出现
<img src="http://sargeraswang.com/images/blog_img/emacs/subline.png" alt="" /></li>
</ul>
</li>
<li>插入重复字符，插入八个星号<code>*</code>,<code>ctrl+u 8 *</code></li>
<li>删除指定区域内的文字，在开始的地方按下<code>ctrl+@</code>,结束的地方按下<code>ctrl+w</code>.</li>
<li><code>ctrl+y</code>可以把上次连续kill掉的内容都吐出来</li>
<li>如果<code>ctrl+y</code>里面没有你要的，你想要的是在更早的时候kill掉的，那就按下<code>alt+y</code>,如果还不是，就继续<code>alt+y</code>直到吐出你想要的为止</li>
</ul>


<h3>文件（FILE）</h3>

<ul>
<li>打开一个文件<code>ctrl+x ctrl+f</code>，输入一个不存在的文件名，就是 Emacs 创建文件的方式</li>
<li>储存这个文件<code>ctrl+x ctrl+s</code>,储存缓存区中的所有文件<code>ctrl+x s</code>.

<blockquote><p>第一次存盘的时候 Emacs 会将源文件重命名以备份，通常是在原文件名之后添加一个<code>~</code>
可以用这条命令关闭这个特性：<code>alt+x customize-variable &lt;Return&gt; make-backup-files &lt;Return&gt;】</code></p></blockquote></li>
<li>Emacs 会自动保存，在原文件名两侧加“#”，如果想恢复为自动保存的文件，使用命令：<code>alt+x recover file</code></li>
</ul>


<h3>缓冲区（BUFFER）</h3>

<ul>
<li>打开新的文件后，想切换会原先的文件，还是执行<code>ctrl+x ctrl+f</code>，输入先前的文件名即可。</li>
<li>列出缓冲区 <code>ctrl+x ctrl+b</code>
<img src="http://sargeraswang.com/images/blog_img/emacs/buffer.png" alt="" /></li>
<li><code>ctrl+x b</code>也可以用来切换缓冲区</li>
<li>并不是所有的缓冲区都对应一个文件，例如<code>*Messages*</code>里放着的都是 Emacs 底部出现的消息。</li>
</ul>


<blockquote><h3>命令集扩展</h3>

<p>Emacs 扩展命令的两种风格：</p></blockquote>

<table>
<thead>
<tr>
<th>按键 &amp; 名称 </th>
<th> 解释 </th>
<th> 举例</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>ctrl+x</code>   字符扩展。   </td>
<td> <code>ctrl+x</code>之后输入另一个字符或者组合键。 </td>
<td> <code>ctrl+x ctrl+s</code></td>
</tr>
<tr>
<td><code>alt+x</code>  命令名扩展。  </td>
<td> <code>alt+x</code>之后输入一个命令名 </td>
<td> <code>alt+x help-with-tutorial</code></td>
</tr>
</tbody>
</table>


<blockquote><p>在Console中，<code>ctrl+z</code>可以将Emacs暂时挂起，回到shell，再使用<code>fg</code>命令可以再切换回 Emacs。1</p></blockquote>

<ul>
<li>字符串替换命令：<code>alt+x replace-string</code> 两个参数分别用回车提交。比如要替换当前屏幕中所有“abc”为“def”，那应该执行<code>alt+x replace-string 回车 abc 回车 def</code></li>
</ul>


<h3>主/辅模式</h3>

<p>状态栏括号中表示当前使用的主模式，使用<code>alt+x 模式名称</code>来切换主模式。</p>

<blockquote><p>例如<code>alt+x text-mode</code>切换到Text模式
* 使用<code>ctrl+h m</code>可以查看当前主模式的文档
* 辅模式与子模式无关，与其他辅模式也无关
有一个叫做自动折行模式，可以再编辑自然语言文本的时候，打字超出一行边界时自动换行。<br/>
默认的行边界是70个字符，可以通过<code>ctrl+u 字符数 ctrl+x f</code>来设置<br/>
设定某段自动折行 <code>alt+q</code></p></blockquote>

<h3>搜索</h3>

<p>Emacs 是渐进式搜索，在你输入的同时Emacs就开始搜索了
* <code>ctrl+s</code>向前搜索
* <code>ctrl+r</code>向后搜索
* 结束搜索：
  * 回车：光标停留在搜索到的位置
  * <code>ctrl+g</code>：光标停留在执行搜索之前的位置</p>

<h3>递归编辑 （没试出来效果。。。后续补上）</h3>

<h3>使用帮助</h3>

<ul>
<li><code>ctrl+h 命令</code>可以查看对应命令的帮助，<code>ctrl+h ?</code>可以列出哪些命令有帮助。</li>
<li><code>ctrl+h c 按键</code>可以查看按键的说明。<code>ctrl+h k 按键</code>可以查看按键更详细的帮助</li>
<li><code>ctrl+h f 命令</code>可以查看命令的帮助</li>
<li><code>ctrl+h v 变量名</code>可以查看变量的文档。</li>
<li><code>ctrl+h a 命令</code>相关命令的搜索</li>
</ul>


<p><img src="http://sargeraswang.com/images/blog_img/benpao.jpg" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第3章 垃圾收集器与内存分配策略]]></title>
    <link href="http://sargeraswang.com/blog/2014/02/03/la-ji-shou-ji-qi-yu-nei-cun-fen-pei-ce-lue/"/>
    <updated>2014-02-03T16:40:00+08:00</updated>
    <id>http://sargeraswang.com/blog/2014/02/03/la-ji-shou-ji-qi-yu-nei-cun-fen-pei-ce-lue</id>
    <content type="html"><![CDATA[<h3>对象已死吗</h3>

<h4>引用计数算法</h4>

<blockquote><p>给对象添加引用计数器，每当有一个地方引用它时，计数器值就加1；当引用失效时，计数器值就减1；任何时刻计数器为0的对象就是不可能再被使用的。</p>

<p>它很难解决对象之间互相循环引用的问题。</p></blockquote>

<!-- more -->


<p><a href="http://item.jd.com/11252778.html"><img src="http://sargeraswang.com/images/blog_img/jvmbook.jpg" alt="" /></a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * VM Args: -XX:+PrintGCDetails</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ReferenceCountingGC</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">Object</span> <span class="n">instance</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">_1MB</span> <span class="o">=</span> <span class="mi">1024</span> <span class="o">*</span> <span class="mi">1024</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/*</span>
</span><span class='line'><span class="cm">     * 这个成员属性的唯一意义就是占点内存，以便能在GC日志中看清楚否被回收过</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">byte</span><span class="o">[]</span> <span class="n">bigSize</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="o">[</span><span class="mi">2</span> <span class="o">*</span> <span class="n">_1MB</span><span class="o">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">testGC</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">ReferenceCountingGC</span> <span class="n">objA</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ReferenceCountingGC</span><span class="o">();</span>
</span><span class='line'>        <span class="n">ReferenceCountingGC</span> <span class="n">objB</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ReferenceCountingGC</span><span class="o">();</span>
</span><span class='line'>        <span class="n">objA</span><span class="o">.</span><span class="na">instance</span> <span class="o">=</span> <span class="n">objB</span><span class="o">;</span>
</span><span class='line'>        <span class="n">objB</span><span class="o">.</span><span class="na">instance</span> <span class="o">=</span> <span class="n">objA</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">objA</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>        <span class="n">objB</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 假设在这行发生GC，objA和objB是否能被回收？</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">gc</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">testGC</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>输入日志：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">[</span><span class="n">Full</span> <span class="n">GC</span> <span class="o">(</span><span class="n">System</span><span class="o">)</span> <span class="o">[</span><span class="nl">CMS:</span> <span class="mi">0</span><span class="n">K</span><span class="o">-&gt;</span><span class="mi">330</span><span class="n">K</span><span class="o">(</span><span class="mi">63872</span><span class="n">K</span><span class="o">),</span> <span class="mf">0.0114563</span> <span class="n">secs</span><span class="o">]</span> <span class="mi">5462</span><span class="n">K</span><span class="o">-&gt;</span><span class="mi">330</span><span class="n">K</span><span class="o">(</span><span class="mi">83008</span><span class="n">K</span><span class="o">),</span> <span class="o">[</span><span class="n">CMS</span> <span class="n">Perm</span> <span class="o">:</span> <span class="mi">4629</span><span class="n">K</span><span class="o">-&gt;</span><span class="mi">4628</span><span class="n">K</span><span class="o">(</span><span class="mi">21248</span><span class="n">K</span><span class="o">)],</span> <span class="mf">0.0115589</span> <span class="n">secs</span><span class="o">]</span> <span class="o">[</span><span class="nl">Times:</span> <span class="n">user</span><span class="o">=</span><span class="mf">0.02</span> <span class="n">sys</span><span class="o">=</span><span class="mf">0.00</span><span class="o">,</span> <span class="n">real</span><span class="o">=</span><span class="mf">0.01</span> <span class="n">secs</span><span class="o">]</span>
</span><span class='line'><span class="n">Heap</span>
</span><span class='line'> <span class="n">par</span> <span class="k">new</span> <span class="n">generation</span>   <span class="n">total</span> <span class="mi">19136</span><span class="n">K</span><span class="o">,</span> <span class="n">used</span> <span class="mi">1021</span><span class="n">K</span> <span class="o">[</span><span class="mi">7</span><span class="n">f3000000</span><span class="o">,</span> <span class="mi">7</span><span class="n">f44c0000</span><span class="o">,</span> <span class="mi">7</span><span class="n">f44c0000</span><span class="o">)</span>
</span><span class='line'>  <span class="n">eden</span> <span class="n">space</span> <span class="mi">17024</span><span class="n">K</span><span class="o">,</span>   <span class="mi">6</span><span class="o">%</span> <span class="n">used</span> <span class="o">[</span><span class="mi">7</span><span class="n">f3000000</span><span class="o">,</span> <span class="mi">7</span><span class="n">f30ff658</span><span class="o">,</span> <span class="mi">7</span><span class="n">f40a0000</span><span class="o">)</span>
</span><span class='line'>  <span class="n">from</span> <span class="n">space</span> <span class="mi">2112</span><span class="n">K</span><span class="o">,</span>   <span class="mi">0</span><span class="o">%</span> <span class="n">used</span> <span class="o">[</span><span class="mi">7</span><span class="n">f40a0000</span><span class="o">,</span> <span class="mi">7</span><span class="n">f40a0000</span><span class="o">,</span> <span class="mi">7</span><span class="n">f42b0000</span><span class="o">)</span>
</span><span class='line'>  <span class="n">to</span>   <span class="n">space</span> <span class="mi">2112</span><span class="n">K</span><span class="o">,</span>   <span class="mi">0</span><span class="o">%</span> <span class="n">used</span> <span class="o">[</span><span class="mi">7</span><span class="n">f42b0000</span><span class="o">,</span> <span class="mi">7</span><span class="n">f42b0000</span><span class="o">,</span> <span class="mi">7</span><span class="n">f44c0000</span><span class="o">)</span>
</span><span class='line'> <span class="n">concurrent</span> <span class="n">mark</span><span class="o">-</span><span class="n">sweep</span> <span class="n">generation</span> <span class="n">total</span> <span class="mi">63872</span><span class="n">K</span><span class="o">,</span> <span class="n">used</span> <span class="mi">330</span><span class="n">K</span> <span class="o">[</span><span class="mi">7</span><span class="n">f44c0000</span><span class="o">,</span> <span class="mi">7</span><span class="n">f8320000</span><span class="o">,</span> <span class="mi">7</span><span class="n">fae00000</span><span class="o">)</span>
</span><span class='line'> <span class="n">concurrent</span><span class="o">-</span><span class="n">mark</span><span class="o">-</span><span class="n">sweep</span> <span class="n">perm</span> <span class="n">gen</span> <span class="n">total</span> <span class="mi">21248</span><span class="n">K</span><span class="o">,</span> <span class="n">used</span> <span class="mi">4689</span><span class="n">K</span> <span class="o">[</span><span class="mi">7</span><span class="n">fae00000</span><span class="o">,</span> <span class="mi">7</span><span class="n">fc2c0000</span><span class="o">,</span> <span class="mi">800000000</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>其中<code>5462K-&gt;330K</code>说明虚拟机并没有因为这两个对象互相引用就不回收他们，这也从侧面说明虚拟机并不通过引用计数算法来判断对象是否存活的。</p></blockquote>

<h4>可达性分析算法</h4>

<ul>
<li>主流商用程序语言都是通过<strong>可达性分析(Reachability Analysis)</strong>来判定对象是否存活的。</li>
<li>通过一系列称为<code>GC Roots</code>的对象作为起始点，从这些节点开始向下搜索，搜索所走过的路径称为引用链，当一个对象到GC Roots没有任何引用链相连时，则证明此对象是不可用的。</li>
<li>Java语言中的GC Roots：

<ul>
<li>虚拟机栈（栈帧中的本地变量表）中引用的对象</li>
<li>方法区中类静态属性引用的对象。</li>
<li>方法区中常量引用的对象。</li>
<li>本地方法栈中JNI（即一般说的Native方法）引用的对象。</li>
</ul>
</li>
</ul>


<h4>引用的分类</h4>

<ul>
<li>JDK1.2之后，Java对引用的概念进行了扩充

<ul>
<li>强引用（Strong Reference）：在程序代码之中普遍存在的 <code>Object obj = new Object()</code>，只要强引用还存在，垃圾收集器永远不会回收掉被引用的对象。</li>
<li>软引用（Soft Reference）：有用但并非必需的对象，<strong>在系统将要发生内存溢出异常之前，将会把这些对象列进回收范围之中进行第二次回收</strong>，使用<code>SoftReference</code>类来实现软引用。</li>
<li>弱引用（Weak Reference）：非必须对象，<strong>只能生存到下一次垃圾收集发生之前</strong>，使用<code>WeakReference</code>类来实现弱引用。</li>
<li>虚引用（Phantom Reference）：也称<em>幽灵引用</em>或者<em>幻影引用</em>，**为一个对象设置虚引用关联的唯一目的就是能在这个对象被收集器回收时收到一个系统通知,在JDK1.2之后，使用<code>PhantomReference</code>类来实现虚引用。</li>
</ul>
</li>
</ul>


<h4>生存还是死亡</h4>

<ul>
<li><p>要真正宣告一个对象死亡，至少要经历两次标记过程：</p>

<ul>
<li>可达性分析后，没有与GC Roots相连接的引用链，将会被第一次标记并进行一次筛选，当对象没有覆盖<code>finalize()</code>方法或者<code>finalize()</code>方法已经被虚拟机调用过，都没有必要执行<code>finalize()</code>方法。</li>
<li>有必要执行<code>finalize()</code>方法的对象会被放在<code>F-Queue</code>队列中，稍后由一个由一个虚拟机自动建立的Finalizer线程去执行它，<code>finalize()</code>方法是对象逃脱死亡命运的最后一次机会，</li>
</ul>
</li>
<li><p>一次对象自我拯救的演示</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">FinalizeEscapeGC</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="n">FinalizeEscapeGC</span> <span class="n">SAVE_HOOK</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">isAlive</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;yes,i am still alive :)&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">finalize</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Throwable</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">.</span><span class="na">finalize</span><span class="o">();</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;finalize method executed!&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">FinalizeEscapeGC</span><span class="o">.</span><span class="na">SAVE_HOOK</span> <span class="o">=</span> <span class="k">this</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">SAVE_HOOK</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FinalizeEscapeGC</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 对象第一次成功拯救自己</span>
</span><span class='line'>        <span class="n">SAVE_HOOK</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">gc</span><span class="o">();</span>
</span><span class='line'>        <span class="c1">// 因为finalize方法优先级很低，所以暂停0.5秒以等待它</span>
</span><span class='line'>        <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">500</span><span class="o">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">SAVE_HOOK</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">SAVE_HOOK</span><span class="o">.</span><span class="na">isAlive</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;no,i am dead :(&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 下面这段代码与上面的完全相同，但是这次自救却失败了</span>
</span><span class='line'>        <span class="n">SAVE_HOOK</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">gc</span><span class="o">();</span>
</span><span class='line'>        <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">500</span><span class="o">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">SAVE_HOOK</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">SAVE_HOOK</span><span class="o">.</span><span class="na">isAlive</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;no,i am dead :(&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>执行结果：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">finalize</span> <span class="n">method</span> <span class="n">executed</span><span class="o">!</span>
</span><span class='line'><span class="n">yes</span><span class="o">,</span><span class="n">i</span> <span class="n">am</span> <span class="n">still</span> <span class="n">alive</span> <span class="o">:)</span>
</span><span class='line'><span class="n">no</span><span class="o">,</span><span class="n">i</span> <span class="n">am</span> <span class="n">dead</span> <span class="o">:(</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>对象自救的机会只有一次，因为一个对象的finalize（）方法最多只会被系统自动调用一次</strong></p>

<blockquote><p><code>finalize()</code>方法只是Java刚诞生时为了使C/C++程序员更容易接受它所作出的一个妥协，运行代价高昂，不确定性大，无法保证各个对象的调用顺序，应尽量避免使用。</p></blockquote>

<h4>回收方法区</h4>

<p>要判定一个类是否是“无用的类”的条件，需要同时满足下面3个条件：</p>

<ol>
<li>该类所有的实例都已经被回收，也就是Java堆中不存在该类的任何实例。</li>
<li>加载该类的ClassLoader已经被回收</li>
<li>该类对应的java.lang.Class对象没有在任何地方被引用，无法在任何地方通过反射访问该类的方法。</li>
</ol>


<blockquote><p>在大量使用反射、动态代理、CGLib等ByteCode框、动态生成JSP以及OSGi这类频繁自定义ClassLoader的场景都需要虚拟机具备类卸载的功能，以保证永久带不会溢出。</p></blockquote>

<h3>垃圾收集算法</h3>

<p>几种算法的思想及其发展过程</p>

<h4>标记-清除算法</h4>

<blockquote><p>标记出所有需要回收的对象，之后统一回收所有被标记的对象。</p></blockquote>

<p>两个不足之处：</p>

<ul>
<li>效率问题：标记和清除两个过程的效率都不高</li>
<li>空间问题：标记清除之后会产生大量不连续的内存碎片，会导致以后在程序运行过程中需要分配大对象时，无法找到足够的连续内存而不得不提前触发另一次垃圾收集动作。</li>
</ul>


<h4>复制算法</h4>

<blockquote><p>将可用内存划分为大小相等的两块，每次只使用其中一块，当这一块的内存用完了，就将还存活着的对象复制到另外一块上面，然后再把已使用过的内存空间一次清理掉。</p></blockquote>

<ul>
<li>商业虚拟机将内存分为一块较大的Eden和两块较小的Survivor空间，每次使用Eden和其中一块Survivor。当回收时，将Eden和Survivor中还存活着的对象一次性地复制到另外一块Survivor空间上，清理掉Eden和刚才用过的Survivor空间。</li>
<li>HotSpot虚拟机默认Eden和Survivor的大小比例是8：1</li>
</ul>


<h4>标记-整理算法</h4>

<blockquote><p>过程仍然与“标记-清除”算法一样，但后续步骤不是直接对可回收对象进行清理，而是让所有存活的对象都向一端移动，然后直接清理掉端边界以外的内存。</p></blockquote>

<h4>分代收集算法</h4>

<blockquote><p>当前商业虚拟机的垃圾收集都采用“分代收集”算法，根据对象存活周期的不同将内存划分为几块，一般是把Java堆分为新生代和老年代，根据各个年代的特点采用最适当的收集算法.</p></blockquote>

<h3>HotSpot的算法实现</h3>

<blockquote><p>在HotSpot的实现中，使用一组称为<code>OopMap</code>的数据结构来直接得知哪些地方存放着对象引用。</p></blockquote>

<h4>安全点(SafePoint)</h4>

<blockquote><p> 程序执行时并非在所有地方都能停顿下来开始GC，只有在到达安全点时才能暂停。</p></blockquote>

<ul>
<li>安全点的选定基本上是以程序“是否具有让程序长时间执行的特征”为标准进行选定的。</li>
<li>“长时间执行”的最明显特征就是指令序列复用，例如方法调用、循环跳转、异常跳转等，所以具有这些功能的指令才会产生Safepoint。</li>
<li>抢先式中断：在GC发生时，首先把所有线程全部中断，如果发现有线程中断的地方不在安全点上，就恢复线程，让它“跑”到安全点上。</li>
<li>主动式中断：当GC需要中断线程的时候，不直接对线程操作，仅仅简单的设置一个标志，各个线程执行时主动去轮询这个标志，发现标志为真时，就自己中断挂起。</li>
</ul>


<h4>安全区域</h4>

<blockquote><p>指在一段大妈片段中，引用关系不会发生变化，在这个区域中的任意地方开始GC都是安全的，也可以把安全区域看作是被扩展了的安全点。</p></blockquote>

<h3>垃圾收集器</h3>

<h4>Serial收集器</h4>

<ul>
<li>“Stop The World”:由虚拟机在后台自动发起和自动完成的，在用户不可见的情况下把用户正常工作的线程全部停掉，这对很多应用来说都是难以接受的。</li>
<li>Serial是虚拟机运行在Client模式下的默认新生代收集器，<strong>简单而高效</strong>（与其他收集器的单线程比），对于限定单个CPU的环境来说，Serial收集器由于没有线程交互的开销，专心做垃圾收集自然可以获得最高的单线程收集效率。</li>
</ul>


<h4>ParNew收集器</h4>

<blockquote><p>ParNew收集器其实就是Serial收集器的多线程版本。</p></blockquote>

<ul>
<li>是许多运行在Server模式下的虚拟机中首选的新生代收集器，目前只有它能与CMS收集器配合工作。</li>
<li>ParNew收集器在单CPU的环境中绝对不会有比Serial收集器更好的效果</li>
</ul>


<h4>Parallel Scavenge收集器</h4>

<blockquote><p>CMS等收集器的关注点是尽可能地缩短垃圾收集时用户线程的停顿时间，而Parallel Scavenge收集器的目标则是达到一个可控制的吞吐量（Throughput），Parallel Scavenge收集器也经常称为“吞吐量优先”收集器
吞吐量=运行用户代码时间/(运行用户代码时间+垃圾收集时间)，虚拟机总共运行了100分钟，其中垃圾收集花掉1分钟，那吞吐量就是99%.</p></blockquote>

<ul>
<li>主要适合在后台运算而不需要太多交互的任务。</li>
<li>控制最大垃圾收集停顿时间 -XX:MaxGCPauseMillis</li>
<li>直接设置吞吐量大小 -XX:GCTimeRatio</li>
<li>虚拟机根据当前系统的运行情况收集性能监控信息，动态调整这些参数以提供最合适的停顿时间或者最大的吞吐量，开启GC自适应调解策略 -XX:+UseAdptiveSizePolicy</li>
</ul>


<h4>Serial Old收集器</h4>

<blockquote><p>Serial收集器的老年代版本</p></blockquote>

<h4>Parallel Old收集器</h4>

<blockquote><p>Parallel收集器的老年代版本</p></blockquote>

<h4>CMS收集器</h4>

<blockquote><p>CMS(Concurrent Mark Sweep)收集器是一种以获取最短回收停顿时间为目标的收集器。</p></blockquote>

<ul>
<li>优点：并发收集、低停顿。</li>
<li>缺点：

<ul>
<li>对CPU资源敏感，在并发阶段会因为占用了一部分线程而导致应用程序变慢，总吞吐量会降低，CMS默认启动的回收线程数是(CPU数量+3)/4</li>
<li>无法处理浮动垃圾(Floating Garbage)</li>
<li>“标记-清除”算法收集结束时会有大量空间碎片产生，参数-XX:CMSFullGCsBeforeCompaction，用于设置执行多少次不压缩的Full GC后，跟着来一次带压缩的(默认值为0，表示每次进入Full GC时都进行碎片整理)</li>
</ul>
</li>
</ul>


<h4>G1收集器</h4>

<blockquote><p>一款面向服务端应用的垃圾收集器</p></blockquote>

<p>从JDK6u14中开始就有Early Access版本的G1收集器供开发人员实验、试用。
与其他收集器相比，G1具有如下特点：</p>

<ol>
<li>并行与并发</li>
<li>分代收集</li>
<li>空间整合</li>
<li>可预测的停顿</li>
</ol>


<p>G1收集器的运作大致可划分为以下几个步骤：</p>

<ol>
<li>初始标记（initial Marking）</li>
<li>并发标记（Concurrent Marking）</li>
<li>最终标记（Final Marking）</li>
<li>筛选回收（Live Data Counting and Evacuation）</li>
</ol>


<h4>理解GC日志</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="mf">0.202</span><span class="o">:</span> <span class="o">[</span><span class="n">Full</span> <span class="n">GC</span> <span class="o">(</span><span class="n">System</span><span class="o">)</span> <span class="mf">0.202</span><span class="o">:</span> <span class="o">[</span><span class="nl">CMS:</span> <span class="mi">0</span><span class="n">K</span><span class="o">-&gt;</span><span class="mi">330</span><span class="n">K</span><span class="o">(</span><span class="mi">63872</span><span class="n">K</span><span class="o">),</span> <span class="mf">0.0153362</span> <span class="n">secs</span><span class="o">]</span> <span class="mi">5462</span><span class="n">K</span><span class="o">-&gt;</span><span class="mi">330</span><span class="n">K</span><span class="o">(</span><span class="mi">83008</span><span class="n">K</span><span class="o">),</span> <span class="o">[</span><span class="n">CMS</span> <span class="n">Perm</span> <span class="o">:</span> <span class="mi">4629</span><span class="n">K</span><span class="o">-&gt;</span><span class="mi">4628</span><span class="n">K</span><span class="o">(</span><span class="mi">21248</span><span class="n">K</span><span class="o">)],</span> <span class="mf">0.0156160</span> <span class="n">secs</span><span class="o">]</span> <span class="o">[</span><span class="nl">Times:</span> <span class="n">user</span><span class="o">=</span><span class="mf">0.02</span> <span class="n">sys</span><span class="o">=</span><span class="mf">0.01</span><span class="o">,</span> <span class="n">real</span><span class="o">=</span><span class="mf">0.01</span> <span class="n">secs</span><span class="o">]</span>
</span><span class='line'><span class="n">Heap</span>
</span><span class='line'> <span class="n">par</span> <span class="k">new</span> <span class="n">generation</span>   <span class="n">total</span> <span class="mi">19136</span><span class="n">K</span><span class="o">,</span> <span class="n">used</span> <span class="mi">1021</span><span class="n">K</span> <span class="o">[</span><span class="mi">7</span><span class="n">f3000000</span><span class="o">,</span> <span class="mi">7</span><span class="n">f44c0000</span><span class="o">,</span> <span class="mi">7</span><span class="n">f44c0000</span><span class="o">)</span>
</span><span class='line'>  <span class="n">eden</span> <span class="n">space</span> <span class="mi">17024</span><span class="n">K</span><span class="o">,</span>   <span class="mi">6</span><span class="o">%</span> <span class="n">used</span> <span class="o">[</span><span class="mi">7</span><span class="n">f3000000</span><span class="o">,</span> <span class="mi">7</span><span class="n">f30ff6a0</span><span class="o">,</span> <span class="mi">7</span><span class="n">f40a0000</span><span class="o">)</span>
</span><span class='line'>  <span class="n">from</span> <span class="n">space</span> <span class="mi">2112</span><span class="n">K</span><span class="o">,</span>   <span class="mi">0</span><span class="o">%</span> <span class="n">used</span> <span class="o">[</span><span class="mi">7</span><span class="n">f40a0000</span><span class="o">,</span> <span class="mi">7</span><span class="n">f40a0000</span><span class="o">,</span> <span class="mi">7</span><span class="n">f42b0000</span><span class="o">)</span>
</span><span class='line'>  <span class="n">to</span>   <span class="n">space</span> <span class="mi">2112</span><span class="n">K</span><span class="o">,</span>   <span class="mi">0</span><span class="o">%</span> <span class="n">used</span> <span class="o">[</span><span class="mi">7</span><span class="n">f42b0000</span><span class="o">,</span> <span class="mi">7</span><span class="n">f42b0000</span><span class="o">,</span> <span class="mi">7</span><span class="n">f44c0000</span><span class="o">)</span>
</span><span class='line'> <span class="n">concurrent</span> <span class="n">mark</span><span class="o">-</span><span class="n">sweep</span> <span class="n">generation</span> <span class="n">total</span> <span class="mi">63872</span><span class="n">K</span><span class="o">,</span> <span class="n">used</span> <span class="mi">330</span><span class="n">K</span> <span class="o">[</span><span class="mi">7</span><span class="n">f44c0000</span><span class="o">,</span> <span class="mi">7</span><span class="n">f8320000</span><span class="o">,</span> <span class="mi">7</span><span class="n">fae00000</span><span class="o">)</span>
</span><span class='line'> <span class="n">concurrent</span><span class="o">-</span><span class="n">mark</span><span class="o">-</span><span class="n">sweep</span> <span class="n">perm</span> <span class="n">gen</span> <span class="n">total</span> <span class="mi">21248</span><span class="n">K</span><span class="o">,</span> <span class="n">used</span> <span class="mi">4689</span><span class="n">K</span> <span class="o">[</span><span class="mi">7</span><span class="n">fae00000</span><span class="o">,</span> <span class="mi">7</span><span class="n">fc2c0000</span><span class="o">,</span> <span class="mi">800000000</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>最前面的数字<code>0.202</code>代表GC发生的时间，是从Java虚拟机启动以来经过的秒数</li>
<li><code>Full GC</code>说明了这次垃圾收集的停顿类型，有<code>Full</code>说明发生了<code>Stop-The-World</code>，如果是调用<code>system.gc()</code>方法所触发的收集，将显示<code>(System)</code></li>
<li><code>CMS Perm</code>表示GC发生的区域，名称是由收集器决定的。</li>
<li><code>4629K-&gt;4628K(21248K)</code>含义是**GC前该内存区域已使用容量->GC后该内存区域使用容量（该内存区域总容量）</li>
<li><code>0.0156160 secs</code>表示该内存区域GC所占用的时间，单位是秒，当系统有多CPU或者多核的话，多线程操作会叠加这些CPU时间，所以看到user或者sys时间超过real时间是完全正确的。</li>
</ul>


<h3>内存分配与回收策略</h3>

<ul>
<li>自动内存管理：给对象分配内存以及回收分配给对象的内存。</li>
<li>对象主要分配在新生代的Eden区上，如果启动了本地线程分配缓冲，将按线程优先在TLAB上分配。少数情况下也可能会直接分配在老年代中，分配的规则并不是百分之百固定的，其细节取决于当前使用的是哪一种垃圾收集器组合，还有虚拟机中与内存相关的参数的设置。</li>
</ul>


<h4>对象优先在Eden分配</h4>

<blockquote><p>当Eden区没有足够空间进行分配时,虚拟机将发起一次Minor GC（新生代GC）
Major GC(老年代GC)的速度一般会比MinorGC慢10倍以上</p></blockquote>

<h4>大对象直接进入老年代</h4>

<ul>
<li>-XX:PretenureSizeThreshold,令大于这个设置值的对象直接在老年代分配。<strong>只对Serial和ParNew两款收集器有效</strong></li>
</ul>


<h4>长期存活的对象将进入老年代</h4>

<blockquote><p>虚拟机给每个对象定义了一个对象年龄（Age）计数器。如果对象在Eden出生并经过第一次Minor GC后仍然存活，并且能被Survivor容纳的话，将被移动到Survivor空间中，并且对象年龄设为1.</p>

<p>对象每熬过一次Minor GC，年龄就增加一岁，当它的年龄增加到一定程度（默认为15岁），就将会被晋升到老年代中。</p>

<p>对象晋升老年代的年龄阀值，可以通过参数-XX:MaxTenuringThreshold设置。</p></blockquote>

<h4>动态 对象年龄 判定</h4>

<blockquote><p>如果在Survivor空间中相同年龄所有对象大小的总和大于Survivor空间的一半，年龄大于或等于该年龄的对象就可以直接进入老年代</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第2章 Java内存区域与内存溢出异常]]></title>
    <link href="http://sargeraswang.com/blog/2014/01/28/javanei-cun-qu-yu-yu-nei-cun-yi-chu-yi-chang/"/>
    <updated>2014-01-28T14:31:00+08:00</updated>
    <id>http://sargeraswang.com/blog/2014/01/28/javanei-cun-qu-yu-yu-nei-cun-yi-chu-yi-chang</id>
    <content type="html"><![CDATA[<blockquote><p>最近在学习周志明的《深入理解Java虚拟机》，写下学习笔记。<br/>
<a href="http://item.jd.com/11252778.html"><img src="http://sargeraswang.com/images/blog_img/jvmbook.jpg" alt="" /></a></p></blockquote>

<h1>运行时数据区</h1>

<ol>
<li>线程共享

<ol>
<li>方法区（Method Area）</li>
<li>（Java）堆（Heap）</li>
</ol>
</li>
<li>线程私有

<ol>
<li>虚拟机栈（VM Stack）</li>
<li>本地方法栈（Native Method Stack）</li>
<li>程序计数器（Program Counter Register）</li>
</ol>


<p><!-- more --></p>

<h3>方法区</h3></li>
<li>方法区用于储存已被虚拟机加载的类信息、常量、静态变量、及时编译器编译后的代码等数据</li>
<li>虽然《规范》中方法区为堆的一个逻辑部分，但它却有一个别名叫做Non-Heap（非堆），目的应该是与Java堆区分开来。</li>
<li>当方法区无法满足内存分配需求时->OutOfMemoryError</li>
</ol>


<h4>运行时常量池（Runtime Constant Pool）</h4>

<ul>
<li>运行时常量池用于存放编译期生成的各种字面量和符号引用，这部分内容将在类加载后进入方法区的运行时常量池中存放</li>
<li>既然运行时常量池是方法区的一部分，自然受到方法区内存的限制，当常量池无法再申请到内存时->OutOfMemoryError</li>
</ul>


<h3>Java堆</h3>

<ul>
<li>Java堆的唯一目的就是存放对象实例。</li>
<li>栈上分配、标量替换优化技术将会导致一些微妙的变化发生，所有的对象都分配在堆上也渐渐变得不是那么“绝对”了。</li>
<li>Java堆是垃圾收集器管理的主要区域，因此很多时候也被称为“GC堆”（Grabage Collected Heap）</li>
<li>如果在堆中没有内存完成实例分配，并且堆也无法再扩展时->OutOfMemoryError</li>
</ul>


<h3>虚拟机栈</h3>

<ul>
<li>虚拟机栈的生命周期与线程相同。</li>
<li>每个方法在执行的同时都会创建一个栈帧（方法运行时的基础数据结构）用于储存

<ol>
<li>局部变量表</li>
<li>操作数栈</li>
<li>动态链接</li>
<li>方法出口<br/>
等信息</li>
</ol>
</li>
<li>通常，Java栈内存和堆内存，中的“栈”说的就是虚拟机栈，或者虚拟机栈中的局部变量表部分</li>
<li>局部变量表存放了编译期间可知的

<ol>
<li>各种基本数据类型（其中64位长度的long和double类型的数据会占用2个局部变量空间，其余数据类型只占用一个）</li>
<li>对象引用类型

<ol>
<li>指向对象起始地址的引用指针</li>
<li>指向一个代表对象的句柄或其他与此对象相关的位置</li>
</ol>
</li>
<li>returnAddress类型（指向了一条字节码指令的地址）</li>
</ol>
</li>
<li>局部变量表所需的内存空间在编译期间完成分配。</li>
<li>在Java虚拟机规范中，对虚拟机栈规定了两种异常状况：

<ol>
<li>线程请求的栈深度大于虚拟机所允许的深度->StackOverflowError</li>
<li>扩展时无法申请到足够的内存->OutOfMemoryError</li>
</ol>
</li>
</ul>


<h3>本地方法栈</h3>

<ul>
<li><strong>本地方法栈</strong>与<strong>虚拟机栈</strong>的区别：

<ul>
<li>虚拟机栈为虚拟机执行Java方法（也就是字节码）服务</li>
<li>本地方法栈为虚拟机使用到的Native方法服务</li>
</ul>
</li>
<li>与<strong>虚拟机栈</strong>一样，->StackOverflowError &amp; OutOfMemoryError</li>
</ul>


<h3>程序计数器</h3>

<ul>
<li>程序计数器可以看做是当前线程所执行的字节码的行号指示器。</li>
<li>Java虚拟机的多线程是通过<strong>线程轮流切换</strong>并<strong>分配处理器执行时间</strong>的方式来实现的。</li>
<li>程序计数器是唯一一个在Java虚拟机规范中没有规定任何OutOfMemoryError情况的区域。</li>
</ul>


<h3>直接内存（Direct Memory）</h3>

<ul>
<li>直接内存并不是虚拟机运行时数据区的一部分，也不是Java虚拟机规范中定义的内存区域。</li>
<li>JDK1.4加入了NIO（New Input/Output），引入了基于通道与缓冲区的I/O方式，可以使用Native函数库直接分配堆外内存。</li>
<li>在配置虚拟机参数时，经常会忽略直接内存，使得各个内存区域总和大于物理内存限制（包括物理的和操作系统级的限制），从而导致动态扩展时->OutOfMemoryError</li>
</ul>


<h1>HotSpot虚拟机对象探秘</h1>

<h3>对象的创建</h3>

<ul>
<li>划分内存：

<ul>
<li>堆中内存绝对规整：指针碰撞（切蛋糕）</li>
<li>堆中内存并不规整：空闲列表（有列表记录哪里可用）</li>
</ul>
</li>
<li>并发情况下划分内存的解决方案：

<ul>
<li>对分配内存空间的动作进行同步处理，实际上虚拟机采用CAS配上失败重试的方式保证更新操作的原子性</li>
<li>把内存分配动作按照线程划分在不同的空间之中进行，每个线程在Java堆中预先分配一小块内存，称为<strong>本地线程分配缓冲</strong>（Thred Local Allocation Buffer,TLAB）</li>
</ul>
</li>
</ul>


<h3>对象的内存布局</h3>

<ul>
<li>在HotSpot虚拟机中，对象在内存中存储的布局可以分为3块区域：对象头（Header）、实例数据（Instance Data）和对齐填充（Padding）。</li>
<li>对象头：

<ul>
<li>用于存储对象自身的运行时数据。</li>
<li>类型指针，即对象指向它的类元数据的指针</li>
<li>如果对象是一个Java数组，在对象头中还必须有一块用于记录数组长度的数据。</li>
</ul>
</li>
<li>实例数据室对象真正存储的有效信息，也是程序代码中所定义的各种类型的字段内容</li>
<li>对齐填充并不是必然存在的，也没有特别的含义，起着<strong>占位符</strong>的作用，因为HotSpot要求对象起始位置必须是8字节的整倍数。</li>
</ul>


<h3>对象的访问定位</h3>

<ul>
<li>主流的访问方式

<ul>
<li>使用句柄：reference->实例数据指针->实例数据
                 &ndash;>类型数据指针->类型数据</li>
<li>直接指针：reference->实例数据（包含类型数据指针）
                               类型数据指针->类型数据</li>
</ul>
</li>
<li>使用句柄来访问的最大好处是reference中存储的是稳定的句柄地址，在对象被移动时只会改变句柄中的实例数据指针，而reference本身不需要修改</li>
<li>使用直接指针最大好处就是速度更快，节省了一次指针定位的时间开销，HotSpot使用直接指针方式进行对象访问</li>
</ul>


<h1>实战：OutOfMemoryError异常</h1>

<ul>
<li>将堆的最小值-Xms参数与最大值-Xmx参数设置为一样即可避免堆自动扩展</li>
<li>通过参数-XX:+HeapDumpOnOutOfMemoryError可以让虚拟机在出现内存溢出异常时Dump出当前的内存堆转储快照以便事后进行分析</li>
</ul>


<h3>Java堆溢出</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * VM Args: -Xms27M -Xmx27M -XX:+HeapDumpOnOutOfMemoryError</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">HeapOOM</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">static</span> <span class="kd">class</span> <span class="nc">OOMObject</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">List</span><span class="o">&lt;</span><span class="n">OOMObject</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">HeapOOM</span><span class="o">.</span><span class="na">OOMObject</span><span class="o">&gt;();</span>
</span><span class='line'>        <span class="k">while</span> <span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">OOMObject</span><span class="o">());</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>运行结果</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">OutOfMemoryError</span><span class="o">:</span> <span class="n">Java</span> <span class="n">heap</span> <span class="n">space</span>
</span><span class='line'><span class="n">Dumping</span> <span class="n">heap</span> <span class="n">to</span> <span class="n">java_pid1089</span><span class="o">.</span><span class="na">hprof</span> <span class="o">...</span>
</span><span class='line'><span class="n">Heap</span> <span class="n">dump</span> <span class="n">file</span> <span class="n">created</span> <span class="o">[</span><span class="mi">34195387</span> <span class="n">bytes</span> <span class="n">in</span> <span class="mf">0.288</span> <span class="n">secs</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中<code>Java heap space</code>说明是Java堆内存溢出</p>

<ul>
<li>内存泄露：进一步查看泄露对象与GC Roots的引用链</li>
<li>内存溢出：

<ul>
<li>检查虚拟机的堆参数（Xmx Xms）与机器物理内存对比看是否还可以调大</li>
<li>从代码上检查是否存在某些对象生命周期过长、持有状态时间过长的情况尝试减少程序运行期的内存消耗</li>
</ul>
</li>
</ul>


<h3>虚拟机栈和本地方法栈溢出</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * VM Args: -Xss128k</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">JavaVMStackSOF</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">int</span> <span class="n">stackLength</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">stackLeak</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">stackLength</span><span class="o">++;</span>
</span><span class='line'>        <span class="n">stackLeak</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Throwable</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">JavaVMStackSOF</span> <span class="n">sof</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JavaVMStackSOF</span><span class="o">();</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">sof</span><span class="o">.</span><span class="na">stackLeak</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Throwable</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;stack length:&quot;</span> <span class="o">+</span> <span class="n">sof</span><span class="o">.</span><span class="na">stackLength</span><span class="o">);</span>
</span><span class='line'>            <span class="k">throw</span> <span class="n">e</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>运行结果</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">stack</span> <span class="nl">length:</span><span class="mi">401</span>
</span><span class='line'><span class="n">Exception</span> <span class="n">in</span> <span class="n">thread</span> <span class="s">&quot;main&quot;</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">StackOverflowError</span>
</span><span class='line'>  <span class="n">at</span> <span class="n">io</span><span class="o">.</span><span class="na">github</span><span class="o">.</span><span class="na">sageraswang</span><span class="o">.</span><span class="na">test</span><span class="o">.</span><span class="na">JavaVMStackSOF</span><span class="o">.</span><span class="na">stackLeak</span><span class="o">(</span><span class="n">JavaVMStackSOF</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">14</span><span class="o">)</span>
</span><span class='line'>  <span class="n">at</span> <span class="n">io</span><span class="o">.</span><span class="na">github</span><span class="o">.</span><span class="na">sageraswang</span><span class="o">.</span><span class="na">test</span><span class="o">.</span><span class="na">JavaVMStackSOF</span><span class="o">.</span><span class="na">stackLeak</span><span class="o">(</span><span class="n">JavaVMStackSOF</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">15</span><span class="o">)</span>
</span><span class='line'>  <span class="o">...</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>创建线程导致内存溢出异常，尝试失败，系统总是假死。</li>
</ul>


<h3>方法区和运行时常量池溢出</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * VM Args: -XX:PermSize=10M -XX:MaxPermSize=10M</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">RuntimeConstantPoolOOM</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;();</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>        <span class="k">while</span> <span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">i</span><span class="o">++).</span><span class="na">intern</span><span class="o">());</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>运行结果</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Exception</span> <span class="n">in</span> <span class="n">thread</span> <span class="s">&quot;main&quot;</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">OutOfMemoryError</span><span class="o">:</span> <span class="n">PermGen</span> <span class="n">space</span>
</span><span class='line'>  <span class="n">at</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">String</span><span class="o">.</span><span class="na">intern</span><span class="o">(</span><span class="n">Native</span> <span class="n">Method</span><span class="o">)</span>
</span><span class='line'>  <span class="n">at</span> <span class="n">io</span><span class="o">.</span><span class="na">github</span><span class="o">.</span><span class="na">sageraswang</span><span class="o">.</span><span class="na">test</span><span class="o">.</span><span class="na">RuntimeConstantPoolOOM</span><span class="o">.</span><span class="na">main</span><span class="o">(</span><span class="n">RuntimeConstantPoolOOM</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">18</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中<code>PermGen space</code>说明运行时常量池属于方法区（HotSpot虚拟机中的永久代）的一部分</p>

<h4>String.Intern()返回引用的测试</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">RuntimeConstantPoolOOM2</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">str1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="o">(</span><span class="s">&quot;计算机&quot;</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;软件&quot;</span><span class="o">).</span><span class="na">toString</span><span class="o">();</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">str1</span><span class="o">.</span><span class="na">intern</span><span class="o">()</span> <span class="o">==</span> <span class="n">str1</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">String</span> <span class="n">str2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="o">(</span><span class="s">&quot;ja&quot;</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;va&quot;</span><span class="o">).</span><span class="na">toString</span><span class="o">();</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">str2</span><span class="o">.</span><span class="na">intern</span><span class="o">()</span> <span class="o">==</span> <span class="n">str2</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>JDK1.6执行结果为两个<code>false</code>,JDK1.7中执行结果为一个<code>true</code>一个<code>false</code>.
因为在JDK1.6中，intern()方法会把首次遇到的字符串实例复制到永久代中，返回的也是这个字符串实例的引用，而由StringBuilder创建的字符串实例在Java堆上，所以必然不是同一个引用</p>

<p>而在JDK1.7中的intern()实现不会再复制实例，只是在常量池中记录首次出现的实例引用，因此intern()返回的引用和StringBuilder创建的那个字符串实例是同一个。对<code>str2</code>比较返回<code>false</code>是因为“java”这个字符串在执行<code>StringBuilder.toString()</code>之前已经出现过，字符串常量中已经出现它的引用了，不符合首次出现的原则。</p></blockquote>

<h4>借助CGLib使方法区出现内存溢出异常</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * VM Args: -XX:PermSize=10M -XX:MaxPermSize=10M</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">JavaMethodAreaOOM</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">while</span> <span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">Enhancer</span> <span class="n">enhancer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Enhancer</span><span class="o">();</span>
</span><span class='line'>            <span class="n">enhancer</span><span class="o">.</span><span class="na">setSuperclass</span><span class="o">(</span><span class="n">OOMObject</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>            <span class="n">enhancer</span><span class="o">.</span><span class="na">setUseCache</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
</span><span class='line'>            <span class="n">enhancer</span><span class="o">.</span><span class="na">setCallback</span><span class="o">(</span><span class="k">new</span> <span class="n">MethodInterceptor</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>                <span class="nd">@Override</span>
</span><span class='line'>                <span class="kd">public</span> <span class="n">Object</span> <span class="nf">intercept</span><span class="o">(</span><span class="n">Object</span> <span class="n">obj</span><span class="o">,</span> <span class="n">Method</span> <span class="n">method</span><span class="o">,</span> <span class="n">Object</span><span class="o">[]</span> <span class="n">args</span><span class="o">,</span> <span class="n">MethodProxy</span> <span class="n">proxy</span><span class="o">)</span>
</span><span class='line'>                        <span class="kd">throws</span> <span class="n">Throwable</span> <span class="o">{</span>
</span><span class='line'>                    <span class="k">return</span> <span class="n">proxy</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">obj</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">});</span>
</span><span class='line'>            <span class="n">enhancer</span><span class="o">.</span><span class="na">create</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">static</span> <span class="kd">class</span> <span class="nc">OOMObject</span> <span class="o">{</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>运行结果：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Exception</span> <span class="n">in</span> <span class="n">thread</span> <span class="s">&quot;main&quot;</span> <span class="n">net</span><span class="o">.</span><span class="na">sf</span><span class="o">.</span><span class="na">cglib</span><span class="o">.</span><span class="na">core</span><span class="o">.</span><span class="na">CodeGenerationException</span><span class="o">:</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">reflect</span><span class="o">.</span><span class="na">InvocationTargetException</span><span class="o">--&gt;</span><span class="kc">null</span>
</span><span class='line'>  <span class="n">at</span> <span class="n">net</span><span class="o">.</span><span class="na">sf</span><span class="o">.</span><span class="na">cglib</span><span class="o">.</span><span class="na">core</span><span class="o">.</span><span class="na">AbstractClassGenerator</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="n">AbstractClassGenerator</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">237</span><span class="o">)</span>
</span><span class='line'>  <span class="n">at</span> <span class="n">net</span><span class="o">.</span><span class="na">sf</span><span class="o">.</span><span class="na">cglib</span><span class="o">.</span><span class="na">proxy</span><span class="o">.</span><span class="na">Enhancer</span><span class="o">.</span><span class="na">createHelper</span><span class="o">(</span><span class="n">Enhancer</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">377</span><span class="o">)</span>
</span><span class='line'>  <span class="n">at</span> <span class="n">net</span><span class="o">.</span><span class="na">sf</span><span class="o">.</span><span class="na">cglib</span><span class="o">.</span><span class="na">proxy</span><span class="o">.</span><span class="na">Enhancer</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="n">Enhancer</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">285</span><span class="o">)</span>
</span><span class='line'>  <span class="n">at</span> <span class="n">io</span><span class="o">.</span><span class="na">github</span><span class="o">.</span><span class="na">sageraswang</span><span class="o">.</span><span class="na">test</span><span class="o">.</span><span class="na">JavaMethodAreaOOM</span><span class="o">.</span><span class="na">main</span><span class="o">(</span><span class="n">JavaMethodAreaOOM</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">29</span><span class="o">)</span>
</span><span class='line'><span class="n">Caused</span> <span class="nl">by:</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">reflect</span><span class="o">.</span><span class="na">InvocationTargetException</span>
</span><span class='line'>  <span class="n">at</span> <span class="n">sun</span><span class="o">.</span><span class="na">reflect</span><span class="o">.</span><span class="na">GeneratedMethodAccessor1</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">Unknown</span> <span class="n">Source</span><span class="o">)</span>
</span><span class='line'>  <span class="n">at</span> <span class="n">sun</span><span class="o">.</span><span class="na">reflect</span><span class="o">.</span><span class="na">DelegatingMethodAccessorImpl</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">DelegatingMethodAccessorImpl</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">25</span><span class="o">)</span>
</span><span class='line'>  <span class="n">at</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">reflect</span><span class="o">.</span><span class="na">Method</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">Method</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">597</span><span class="o">)</span>
</span><span class='line'>  <span class="n">at</span> <span class="n">net</span><span class="o">.</span><span class="na">sf</span><span class="o">.</span><span class="na">cglib</span><span class="o">.</span><span class="na">core</span><span class="o">.</span><span class="na">ReflectUtils</span><span class="o">.</span><span class="na">defineClass</span><span class="o">(</span><span class="n">ReflectUtils</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">384</span><span class="o">)</span>
</span><span class='line'>  <span class="n">at</span> <span class="n">net</span><span class="o">.</span><span class="na">sf</span><span class="o">.</span><span class="na">cglib</span><span class="o">.</span><span class="na">core</span><span class="o">.</span><span class="na">AbstractClassGenerator</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="n">AbstractClassGenerator</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">219</span><span class="o">)</span>
</span><span class='line'>  <span class="o">...</span> <span class="mi">3</span> <span class="n">more</span>
</span><span class='line'><span class="n">Caused</span> <span class="nl">by:</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">OutOfMemoryError</span><span class="o">:</span> <span class="n">PermGen</span> <span class="n">space</span>
</span><span class='line'>  <span class="n">at</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">ClassLoader</span><span class="o">.</span><span class="na">defineClass1</span><span class="o">(</span><span class="n">Native</span> <span class="n">Method</span><span class="o">)</span>
</span><span class='line'>  <span class="n">at</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">ClassLoader</span><span class="o">.</span><span class="na">defineClassCond</span><span class="o">(</span><span class="n">ClassLoader</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">637</span><span class="o">)</span>
</span><span class='line'>  <span class="n">at</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">ClassLoader</span><span class="o">.</span><span class="na">defineClass</span><span class="o">(</span><span class="n">ClassLoader</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">621</span><span class="o">)</span>
</span><span class='line'>  <span class="o">...</span> <span class="mi">8</span> <span class="n">more</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p><strong>在经常动态生成大量Class的应用中，需要特别注意类的回收状况</strong></p></blockquote>

<h3>本机直接内存溢出</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">sun.misc.Unsafe</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * VM Args: -Xmx20M -XX:MaxDirectMemorySize=10M</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">DirectMemoryOOM</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">_1MB</span> <span class="o">=</span> <span class="mi">1024</span> <span class="o">*</span> <span class="mi">1024</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Field</span> <span class="n">unsafeField</span> <span class="o">=</span> <span class="n">Unsafe</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getDeclaredFields</span><span class="o">()[</span><span class="mi">0</span><span class="o">];</span>
</span><span class='line'>        <span class="n">unsafeField</span><span class="o">.</span><span class="na">setAccessible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span><span class='line'>        <span class="n">Unsafe</span> <span class="n">unsafe</span> <span class="o">=</span> <span class="o">(</span><span class="n">Unsafe</span><span class="o">)</span> <span class="n">unsafeField</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
</span><span class='line'>        <span class="k">while</span> <span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">unsafe</span><span class="o">.</span><span class="na">allocateMemory</span><span class="o">(</span><span class="n">_1MB</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><font color='red'>运行10分钟，没有出现异常，待解决。</font></p>

<blockquote><p>由DirectMemory导致的内存溢出，Heap Dump 文件没有明显的异常</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[总结和展望]]></title>
    <link href="http://sargeraswang.com/blog/2014/01/04/zong-jie-he-zhan-wang/"/>
    <updated>2014-01-04T12:06:00+08:00</updated>
    <id>http://sargeraswang.com/blog/2014/01/04/zong-jie-he-zhan-wang</id>
    <content type="html"><![CDATA[<p>新年到，很多大牛都在blog上写下自己的2013总结。回想一下自己，13年的变化还蛮大的，写下来激励自己往前走。</p>

<!-- more -->


<h1>总结2013</h1>

<h3>读书</h3>

<ul>
<li>《记事本圆梦计划》，严格来说，这本书是在2012.12.15读完的，但是它（书中关于人生目标规划的部分）对我13年的影响极大。</li>
<li>《你所不了解的德国人》</li>
<li>《自控力》，这本书可以评为年度影响力最大（对我来说）的书，戒烟，吃素，读书，学习……等等都离不开此书教给我的知识。</li>
<li>《Getting more》</li>
<li><a href="http://cnborn.net/docs/getting_real/">《Getting Real》</a></li>
<li>《反常识经济学》</li>
<li>《在你身边，为你设计》</li>
<li>《专业主义》</li>
<li>《动物庄园》</li>
<li>《just for fun》</li>
<li>《禅与摩托车维修艺术》，被无数大牛推荐过的必读书目，读了四个多月了，还差20%，被我选为‘轻轨书’了，须长时间坐轻轨时看。</li>
</ul>


<h3>习惯</h3>

<ul>
<li>戒烟：长达8年的吸烟史终结了，多亏《自控力》一书。</li>
<li>骑自行车上班：每天来回17公里，雪天除外。</li>
<li>吃素：是因为在youtube上看到一个视频，小女孩问妈妈“我们为什么要杀死动物，他们也是有生命的”，后决定不吃肉了，到目前持续了半年。</li>
<li>blog：无数大牛说了程序员写blog的重要性，遂决定开始写，从去年的光棍节开始的。</li>
</ul>


<h3>工作</h3>

<ul>
<li>有不到半年时间去支援测试部门，现在回想起来，这段时光对我是极为有益的，一是换个角色看软件，知道测试部门看我开发的东西是什么感觉；二是由于测试工作机械单调，业余时间有很多的精力去读书，给改变自己打好基础。</li>
<li>从测试部门回来之后的开发中，已经能感觉到自己的变化，对公用原件的提取，对自己不会的技术的学习能力有提高</li>
<li>与同事共同开发的一个功能，bug非常多，之后分析原因，我想应该是测试不足，那为什么测试不足呢？我想是因为责任不清，我负责前台，他负责后台，任何功能都是我直接调用他的方法，所以我没有去测试调用之后的结果是否正确；他呢，既然提供了接口，那么使用方一定会测试的，自己就没有测试。这就是典型的两个人都是认为对方会去做，结果都没有做的问题。而且因为这是第一次这么分工，吸取教训，下次尽量不要这样分工，如果分了，那就要提前说好，负责前台部分的人要负责功能测试正确。</li>
</ul>


<h1>展望2014</h1>

<h3>读书</h3>

<ul>
<li>技术类

<ul>
<li>《Linux/Unix设计思想》</li>
<li>《Spring技术内幕》</li>
<li>《Struts2技术内幕》</li>
<li>《JQuery权威指南》</li>
<li>《Effective Java》</li>
</ul>
</li>
<li>其他

<ul>
<li>《如何阅读一本书》</li>
<li>《暗时间》</li>
</ul>
</li>
</ul>


<p>目前已经买了还没有读的书就这些，很有可能会因为各种需要优先读其他书，但总体上要多读一些技术类的。</p>

<h3>习惯</h3>

<ul>
<li>已有的戒烟、骑车上班、吃素、写博客要继续保持。</li>
<li>改善作息时间：这个确实很难做到，之前本来已经做到早睡早起了，但是连续加班几天，每天都23点回家，直接就毁掉了好不容易养成的习惯。新的一年，要尽量避免各种原因影响到作息时间。</li>
<li>提高吃的质量，多年来将就着吃，随便吃点儿便宜的，这种做法的影响已经逐渐显现，偶尔的胃痛，食欲不振，精神萎靡。新的一年，保护好胃，只有一个钢铁侠般的身躯才能实现我事业上的梦想。</li>
</ul>


<h3>工作</h3>

<ul>
<li>在前面的博客中我也写到过：目前项目处于最后拼杀的阶段，我不能做逃兵。</li>
<li>这个项目做完之后，要出去闯一闯了，这个公司，从我刚毕业到现在一待就是三年多，就像这个博客最上方写的那样“我常常思考为什么鸟儿拥有整片天空，却常常停留在一个地方。然后我问了自己同样的问题。”，多出去闯一闯，才知道这个世界有多大。</li>
</ul>


<hr />

<p>奔跑吧，少年！！！<br/>
<img src="http://sargeraswang.com/images/blog_img/benpao.jpg" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[配置每次new_post后自动用Mou打开文章(续)]]></title>
    <link href="http://sargeraswang.com/blog/2013/12/19/pei-zhi-mei-ci-new-posthou-zi-dong-yong-mouda-kai-wen-zhang-xu/"/>
    <updated>2013-12-19T22:13:00+08:00</updated>
    <id>http://sargeraswang.com/blog/2013/12/19/pei-zhi-mei-ci-new-posthou-zi-dong-yong-mouda-kai-wen-zhang-xu</id>
    <content type="html"><![CDATA[<blockquote><p>已经有超过10天没有写过博客了，最近读完了Linux发明者<a href="http://zh.wikipedia.org/wiki/%E6%9E%97%E7%BA%B3%E6%96%AF%C2%B7%E6%89%98%E7%93%A6%E5%85%B9">林纳斯·托瓦兹</a>的自传《Just For Fun》，受益匪浅。但我还是不想以读后感的形式写在这里，我想没有必要专门写一整篇，何时想起来何时写出来就好了。</p></blockquote>

<!-- more -->


<p>这篇还是来擦屁股的，之前一篇<a href="http://sargeraswang.com/blog/2013/11/16/pei-zhi-mei-ci-new-posthou-zi-dong-yong-mouda-kai-wen-zhang/">配置每次new_post后自动用Mou打开文章</a>,用了几次之后发现一个小问题，就是当我使用了<code>rake new_post['xxx']</code>之后，确实帮我使用Mou打开Markdown文件了，但是当前shell就没法用了，只有退出Mou后才可以使用。</p>

<p>最近一直在找解决办法，今天终于找到了，就是<code>open</code>命令加上<code>-a</code>参数，官方是这样描述的：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-a                Opens with the specified application.</span></code></pre></td></tr></table></div></figure>


<p>那么，单独在shell中使用的代码就是：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>open -a /Applications/Mou.app/Contents/MacOS/Mou xxx.markdown
</span></code></pre></td></tr></table></div></figure>


<p>测试成功，修改<code>Rakefile</code>文件中的：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">editor</span>   <span class="o">=</span> <span class="s2">&quot;/Applications/Mou.app/Contents/MacOS/Mou&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>为：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">editor</span>   <span class="o">=</span> <span class="s2">&quot;open -a /Applications/Mou.app/Contents/MacOS/Mou&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>大功告成，shell与Mou互不影响，效果如图：<br/>
<img src="http://sargeraswang.com/images/blog_img/newpost.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress添加腾讯微博分享中图片的问题]]></title>
    <link href="http://sargeraswang.com/blog/2013/12/09/octopresstian-jia-teng-xun-wei-bo-fen-xiang-zhong-tu-pian-de-wen-ti/"/>
    <updated>2013-12-09T22:44:00+08:00</updated>
    <id>http://sargeraswang.com/blog/2013/12/09/octopresstian-jia-teng-xun-wei-bo-fen-xiang-zhong-tu-pian-de-wen-ti</id>
    <content type="html"><![CDATA[<blockquote><p>这篇又是来收拾残局的，之前<a href="http://sargeraswang.com/blog/2013/11/22/zai-octopresszhong-tian-jia-teng-xun-wei-bo-yi-jian-fen-xiang-gong-neng/">在Octopress中添加腾讯微博一键分享功能</a>最后，说有两点不尽人意之处，第二点是居中的手段太低劣，这个我放弃调试了，第一点是image应该可以取文章中的所有图片才对，搞了两天，终于搞了一个像样的解决方式。</p></blockquote>

<!-- more -->


<h4>在<code>source/_includes/post/sharing.html</code>添加微博分享处添加</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{% if page.images %}
</span><span class='line'>{% capture carriage_return %}
</span><span class='line'>{% endcapture %}
</span><span class='line'>  {% capture weiboImg %}
</span><span class='line'>      {% for item in page.images %}
</span><span class='line'>          {{ site.url | append: item | append: '|' }}
</span><span class='line'>      {% endfor %}
</span><span class='line'>  {% endcapture %}
</span><span class='line'>{% else %}
</span><span class='line'>  {% capture weiboImg %}
</span><span class='line'>      {{site.url}}/images/blog-title.png 【这是备用图片路径，就是当博客图片为空时使用这张】
</span><span class='line'>  {% endcapture %}
</span><span class='line'>{% endif %}</span></code></pre></td></tr></table></div></figure>


<h4>原先的Div的data-pic修改为</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>data-pic="{{weiboImg| remove: ' ' | remove: '    '| remove: carriage_return }}"</span></code></pre></td></tr></table></div></figure>


<p>上面那些<code>remove</code>是因为在测试中发现，太多的空格和tab和换行，会导致出现的图片变少</p>

<h4>博客中的图片声明在MarkDown文件的<a href="http://jekyllrb.com/docs/frontmatter/">frontmatter</a>处，如下写法</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>images: [/images/blog_img/naruto/Naruto.jpg,
</span><span class='line'>      /images/blog_img/naruto/Rin.jpg]</span></code></pre></td></tr></table></div></figure>


<p>这样的话，<code>images</code>就是一个Array类型对象了</p>

<h4>图片声明方式改为参考式写法，如下</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[Raruto]: {{page.images[0]}}
</span><span class='line'>[Rin]: {{page.images[1]}}
</span><span class='line'>随便别的文字
</span><span class='line'>![鸣人][Raruto]
</span><span class='line'>![琳][Rin]</span></code></pre></td></tr></table></div></figure>


<p>效果如：<br/>
<img src="http://sargeraswang.com/images/blog_img/naruto/Naruto.jpg" alt="鸣人" />
<img src="http://sargeraswang.com/images/blog_img/naruto/Rin.jpg" alt="琳" /></p>

<p>点击【转播】按钮，后的效果图如：</p>

<p><img src="http://sargeraswang.com/images/blog_img/naruto/success.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[解决Octopress的表格样式问题]]></title>
    <link href="http://sargeraswang.com/blog/2013/12/09/jie-jue-octopressde-biao-ge-yang-shi-wen-ti/"/>
    <updated>2013-12-09T21:42:00+08:00</updated>
    <id>http://sargeraswang.com/blog/2013/12/09/jie-jue-octopressde-biao-ge-yang-shi-wen-ti</id>
    <content type="html"><![CDATA[<blockquote><p>在<a href="http://sargeraswang.com/blog/2013/11/29/10pian-vs19tian-bo-ke-zhuan-xie-xiao-jie/">10篇vs19天博客撰写小结</a>中,一个待解决的问题：表格(在Octopress中并没有画出线，后续解决)</p></blockquote>

<p>Google到<a href="http://programus.github.io/blog/2012/03/07/add-table-data-css-for-octopress/">为Octopress追加数据表格的CSS</a>这篇，照着做就好了。</p>

<!-- more -->


<h3>创建<code>source/stylesheets/data-table.css</code>,内容如下</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="o">*</span> <span class="o">+</span> <span class="nt">table</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">border-style</span><span class="o">:</span><span class="k">solid</span><span class="p">;</span>
</span><span class='line'>  <span class="k">border-width</span><span class="o">:</span><span class="m">1px</span><span class="p">;</span>
</span><span class='line'>  <span class="k">border-color</span><span class="o">:</span><span class="m">#e7e3e7</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">*</span> <span class="o">+</span> <span class="nt">table</span> <span class="nt">th</span><span class="o">,</span> <span class="o">*</span> <span class="o">+</span> <span class="nt">table</span> <span class="nt">td</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">border-style</span><span class="o">:</span><span class="k">dashed</span><span class="p">;</span>
</span><span class='line'>  <span class="k">border-width</span><span class="o">:</span><span class="m">1px</span><span class="p">;</span>
</span><span class='line'>  <span class="k">border-color</span><span class="o">:</span><span class="m">#e7e3e7</span><span class="p">;</span>
</span><span class='line'>  <span class="k">padding-left</span><span class="o">:</span> <span class="m">3px</span><span class="p">;</span>
</span><span class='line'>  <span class="k">padding-right</span><span class="o">:</span> <span class="m">3px</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">*</span> <span class="o">+</span> <span class="nt">table</span> <span class="nt">th</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">border-style</span><span class="o">:</span><span class="k">solid</span><span class="p">;</span>
</span><span class='line'>  <span class="k">font-weight</span><span class="o">:</span><span class="k">bold</span><span class="p">;</span>
</span><span class='line'>  <span class="k">background</span><span class="o">:</span> <span class="sx">url(&quot;/images/noise.png?1330434582&quot;)</span> <span class="k">repeat</span> <span class="k">scroll</span> <span class="k">left</span> <span class="k">top</span> <span class="m">#F7F3F7</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">*</span> <span class="o">+</span> <span class="nt">table</span> <span class="nt">th</span><span class="o">[</span><span class="nt">align</span><span class="o">=</span><span class="s2">&quot;left&quot;</span><span class="o">],</span> <span class="o">*</span> <span class="o">+</span> <span class="nt">table</span> <span class="nt">td</span><span class="o">[</span><span class="nt">align</span><span class="o">=</span><span class="s2">&quot;left&quot;</span><span class="o">]</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">text-align</span><span class="o">:</span><span class="k">left</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">*</span> <span class="o">+</span> <span class="nt">table</span> <span class="nt">th</span><span class="o">[</span><span class="nt">align</span><span class="o">=</span><span class="s2">&quot;right&quot;</span><span class="o">],</span> <span class="o">*</span> <span class="o">+</span> <span class="nt">table</span> <span class="nt">td</span><span class="o">[</span><span class="nt">align</span><span class="o">=</span><span class="s2">&quot;right&quot;</span><span class="o">]</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">text-align</span><span class="o">:</span><span class="k">right</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">*</span> <span class="o">+</span> <span class="nt">table</span> <span class="nt">th</span><span class="o">[</span><span class="nt">align</span><span class="o">=</span><span class="s2">&quot;center&quot;</span><span class="o">],</span> <span class="o">*</span> <span class="o">+</span> <span class="nt">table</span> <span class="nt">td</span><span class="o">[</span><span class="nt">align</span><span class="o">=</span><span class="s2">&quot;center&quot;</span><span class="o">]</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">text-align</span><span class="o">:</span><span class="k">center</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>在<code>source/_includes/head.html</code>中，找到引用<code>screen.css</code>的地方，添加下面的代码</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>  <span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">&quot;{{ root_url }}/stylesheets/screen.css&quot;</span> <span class="na">media=</span><span class="s">&quot;screen, projection&quot;</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">type=</span><span class="s">&quot;text/css&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  {% if page.styles contains &#39;data-table&#39; %}
</span><span class='line'>  <span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">&quot;{{ root_url }}/stylesheets/data-table.css&quot;</span> <span class="na">media=</span><span class="s">&quot;screen, projection&quot;</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">type=</span><span class="s">&quot;text/css&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  {% endif %}
</span></code></pre></td></tr></table></div></figure>


<h3>在需要用到表格的博客文件中，的<a href="http://jekyllrb.com/docs/frontmatter/">frontmatter</a>位置，添加</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>styles: [data-table]
</span></code></pre></td></tr></table></div></figure>


<h3>ok，问题解决，效果如下：</h3>

<table>
<thead>
<tr>
<th align="left">左对齐表头 </th>
<th align="center"> 中间对齐表头 </th>
<th align="right"> 右对齐表头</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">左对齐数据 </td>
<td align="center">中间对齐数据  </td>
<td align="right">右对齐数据</td>
</tr>
<tr>
<td align="left">第二行数据 </td>
<td align="center">也是第二行    </td>
<td align="right">还是第二行</td>
</tr>
<tr>
<td align="left">懒得写了&hellip;</td>
<td align="center">&hellip;..         </td>
<td align="right">&hellip;..</td>
</tr>
<tr>
<td align="left">长数据，以便看出表头的对齐</td>
<td align="center">长数据，以便看出表头的对齐</td>
<td align="right">长数据，以便看出表头的对齐</td>
</tr>
</tbody>
</table>


<h3>感谢原作者<a href="http://programus.github.io/blog/2012/03/07/add-table-data-css-for-octopress/">程序猎人的博客</a>的分享</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google已经收录了]]></title>
    <link href="http://sargeraswang.com/blog/2013/12/06/googleyi-jing-shou-lu-liao/"/>
    <updated>2013-12-06T21:36:00+08:00</updated>
    <id>http://sargeraswang.com/blog/2013/12/06/googleyi-jing-shou-lu-liao</id>
    <content type="html"><![CDATA[<p>在<a href="">上一篇文章</a>中，说道了最后一个问题。
就是这个使用Octopress在Github上搭建的博客，没有被Google收录的问题，最近闲来又自恋的搜索了一下，发现已经被收录了。</p>

<p><img src="http://sargeraswang.com/images/blog_img/google.png"></p>

<p>如上图中的最后一个就是了。</p>

<!-- more -->


<h3>解决方法</h3>

<p>回想了一下，什么都没有做诶。或许这就是传说中的无招胜有招。</p>

<p>最近工作实在是太忙了，每天晚上加班，六日也加班，明后继续。。<br/>
做项目就像是在战斗，而现在已经到了你死我活的阶段，所以，战到最后！！！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[10篇vs19天博客撰写小结]]></title>
    <link href="http://sargeraswang.com/blog/2013/11/29/10pian-vs19tian-bo-ke-zhuan-xie-xiao-jie/"/>
    <updated>2013-11-29T22:07:00+08:00</updated>
    <id>http://sargeraswang.com/blog/2013/11/29/10pian-vs19tian-bo-ke-zhuan-xie-xiao-jie</id>
    <content type="html"><![CDATA[<blockquote><p>刚才看了<a href="http://www.read.org.cn/html/2314-wo-de-zhan-tuo-ce-lue.html">战隼的学习探索-我的战拖策略</a>,想想自己距上一篇博文也有3天了，回想在博客搭建好的第二天，我曾说<a href="http://sargeraswang.com/blog/2013/11/12/guan-yu-wo-yu-dao-de-wen-ti/">频率暂定最少3天一篇</a>。</p></blockquote>

<p>如果用除法，10篇/19天，平均2天一篇，应该算合格。<br/>
但这就是在给自己找借口，我肯定当天所说“最少3天一篇”的愿意是“要把写博客当做一种习惯”，《自控力》中曾经说过：当我们不想做一件事情的时候，大脑就会想好各种“合理”的原因，让你不至于太痛苦。</p>

<!-- more -->


<p>说到《自控力》这本书，对我的影响还是极大的。看到第三章的时候，我决定戒烟了，然后就真的戒了。后来觉得吃素比较好，然后到现在都能保持。</p>

<p><strong>从这本书中，我到底学到了什么？</strong></p>

<blockquote><p>直面内心，不要逃避</p></blockquote>

<p>自从看完书后，每当我发现自控力变弱的时候，就放好心态，去看看脑子里到底是怎么想的，如何帮助自己的失控找借口的。<br/>
这样思考的次数多了，自然就会有相应地策略。也就是说，要和那个容易失控的自己做斗争。既然是和另一个“自己”作斗争，那么只要你存在，他就存在，所以没有必要想着“三天内改变自己”，“一个月减肥5公斤”。<br/>
那只是三分钟的热度，书中作者说道，自控力是会消耗的能量，也就是说会有用完的时候。</p>

<p>但是，自控力也可培养，慢慢的变多，方式之一就是从养成小习惯开始。</p>

<hr />

<p>好吧，以上内容，只是一时想起，就写下来了，跑题很远。</p>

<p>今天既然是小结，就把前几篇博客遗漏的，没有做完的事情列出来，生成一个TODO List:</p>

<ul>
<li>在写<a href="http://sargeraswang.com/blog/2013/11/13/tian-jia-ping-lun-gong-neng/">添加评论功能</a>这篇的时候，我并不知道如何才能把<code>{% if %}</code>转义掉，就用了全角大括号这一招，但是后来我在octopress官网上找到了解法，就是<code>raw</code>标签:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{% if %}{% endif %}</span></code></pre></td></tr></table></div></figure>


<p><img src="http://sargeraswang.com/images/blog_img/rawtag.png"></p>

<ul>
<li><p>在写完<a href="http://sargeraswang.com/blog/2013/11/16/pei-zhi-mei-ci-new-posthou-zi-dong-yong-mouda-kai-wen-zhang/">配置每次new_post后自动用Mou打开文章</a>之后，我一直用到现在，问题也就出现了，自动用Mou打开文章后，终端就一直在等Mou关闭才能继续；而且一旦关闭终端，Mou也会被关闭，
<font color="green">这个已解决<a href="http://sargeraswang.com/blog/2013/12/19/pei-zhi-mei-ci-new-posthou-zi-dong-yong-mouda-kai-wen-zhang-xu/">链接</a></font>。<br/>
<img src="http://sargeraswang.com/images/blog_img/shellWaitMou.png"></p></li>
<li><p>在<a href="http://sargeraswang.com/blog/2013/11/16/markdown-yu-fa-shuo-ming/">MarkDown 语法说明</a>一文中，有说道“表格(在Octopress中并没有画出线，后续解决)”,后来有查过解决方案，是修改css，但是一直没有动手改，
<font color="green">这个已解决<a href="http://sargeraswang.com/blog/2013/12/09/jie-jue-octopressde-biao-ge-yang-shi-wen-ti/">链接</a></font>。</p></li>
<li><p>关于在<a href="http://sargeraswang.com/blog/2013/11/17/emacsshi-yong-shou-ce/">Emacs使用手册(一) 基本操作</a>中我说要学习Emacs的原因是eclipse有这个键位支持方案，后来我有坚持使用一周这个方案，最终放弃了，原因是eclipse的默认emacs方案并没有支持所有按键（我最不能忍受的是系统自动提示的时候，Ctrl+N并不能当做↓来使用），Google了一下，发现一个eclipse的emacs插件（<a href="http://www.mulgasoft.com/">Emacs+ Eclipse Plug-in</a>）,但是作者已经不维护了，新版Eclipse中使用会报错，所以现在我还忍受着手要离开主键盘去按上下左右的痛苦，
<font color="green">这个已解决<a href="http://sargeraswang.com/blog/2014/05/09/mac-xia-eclipse-shi-yong-emacan-jian-de-she-zhi/">链接</a></font>。<br/>
<img src="http://sargeraswang.com/images/blog_img/emacsPlus.png"></p></li>
<li><p>既然是叫做“Emacs使用手册(一) 基本操作”，就说明至少还应该有“二”，不能假装忘记，
<font color="green">这个已解决<a href="http://sargeraswang.comhttp://127.0.0.1:4000/blog/2014/03/18/emacsshi-yong-shou-ce-er-shi-yong-jin-jie/">链接</a></font>。</p></li>
<li><p>在<a href="http://sargeraswang.com/blog/2013/11/22/zai-octopresszhong-tian-jia-teng-xun-wei-bo-yi-jian-fen-xiang-gong-neng/">在Octopress中添加腾讯微博一键分享功能</a> 最后，有提出两点&#8221;不尽人意之处&#8221;，
<font color="green">2013-12-10 这个已解决<a href="http://sargeraswang.com/blog/2013/12/09/octopresstian-jia-teng-xun-wei-bo-fen-xiang-zhong-tu-pian-de-wen-ti/">链接</a></font>。</p></li>
<li><p>在<a href="http://sargeraswang.com/blog/2013/11/25/appfuseda-jian-sshde-wen-ti-yu-jie-jue/">Appfuse搭建SSH的问题与解决</a>写完之后，我有大概看过整个生成的项目，其中除了我想要的Spring+Struts2+Hibernate之外，有太多太多的其他东西。所以不适用，后来我又试了简易版的Light版，好像有好一些，但总是觉得不如从头自己搭建一个来的舒心，吃的放心，就这么定了，自己搭建一个，然后过程记录在博客里，
<font color="red">这个待解决</font>。</p></li>
</ul>


<h3>惊人</h3>

<p>一共11篇博客，就有6个待办事项，我的大脑在20:00的时候还很痛苦于“到底应该写一篇什么呢，没有题材啊！”,这完全是在给自己不想动手而找借口。</p>

<ul>
<li>还有一个才对，搜索引擎收录的问题，百度已经解决了，但是Google为何没有收录，还没有找到原因，
<font color="green">这个已解决<a href="http://sargeraswang.com/blog/2013/12/06/googleyi-jing-shou-lu-liao/">链接</a></font>。</li>
</ul>


<p><img src="http://sargeraswang.com/images/blog_img/baidu.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Appfuse搭建SSH的问题与解决]]></title>
    <link href="http://sargeraswang.com/blog/2013/11/25/appfuseda-jian-sshde-wen-ti-yu-jie-jue/"/>
    <updated>2013-11-25T20:14:00+08:00</updated>
    <id>http://sargeraswang.com/blog/2013/11/25/appfuseda-jian-sshde-wen-ti-yu-jie-jue</id>
    <content type="html"><![CDATA[<ul>
<li>Plugin execution not covered by lifecycle configuration: org.codehaus.mojo:dbunit-maven-plugin:1.0-beta-3:operation (execution: test-compile, phase: test-compile)

<ul>
<li>解决方法：在<code>&lt;plugins&gt;</code>外面套上<code>&lt;pluginManagement&gt;</code></li>
</ul>
</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;pluginManagement&gt;</span>
</span><span class='line'>  <span class="nt">&lt;plugins&gt;</span>
</span><span class='line'>      <span class="nt">&lt;plugin&gt;&lt;/plugin&gt;</span>
</span><span class='line'>      ...
</span><span class='line'>  <span class="nt">&lt;/plugins&gt;</span>
</span><span class='line'><span class="nt">&lt;/pluginManagement&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<ul>
<li>Can not find the tag library descriptor for &ldquo;<a href="http://java.sun.com/jsp/jstl/core">http://java.sun.com/jsp/jstl/core</a>&rdquo;</li>
<li>Can not find the tag library descriptor for &ldquo;<a href="http://java.sun.com/jsp/jstl/fmt">http://java.sun.com/jsp/jstl/fmt</a>&rdquo;</li>
<li>Can not find the tag library descriptor for &ldquo;<a href="http://java.sun.com/jsp/jstl/functions">http://java.sun.com/jsp/jstl/functions</a>&rdquo;

<ul>
<li>解决方法：添加jstl依赖</li>
</ul>
</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>  <span class="nt">&lt;groupId&gt;</span>jstl<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;artifactId&gt;</span>jstl<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>1.2<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'><span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>  <span class="nt">&lt;groupId&gt;</span>taglibs<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;artifactId&gt;</span>standard<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>1.1.2<span class="nt">&lt;/version&gt;</span>
</span><span class='line'><span class="nt">&lt;/dependency&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>遇到的其他问题基本都是因为网络问题，jar包下载失败，重新下载就好了。
附上我配置成功的项目。<br/>
<a href="http://sargeraswang.com/images/code/myproject.zip">下载myproject.zip</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在Octopress中添加腾讯微博一键分享功能]]></title>
    <link href="http://sargeraswang.com/blog/2013/11/22/zai-octopresszhong-tian-jia-teng-xun-wei-bo-yi-jian-fen-xiang-gong-neng/"/>
    <updated>2013-11-22T19:04:00+08:00</updated>
    <id>http://sargeraswang.com/blog/2013/11/22/zai-octopresszhong-tian-jia-teng-xun-wei-bo-yi-jian-fen-xiang-gong-neng</id>
    <content type="html"><![CDATA[<blockquote><p>前两天为我的博客添加了腾讯微博的一键分享功能，过程记录在这里。
Emacs使用手册系列要过几天才能写了。
接下来的首要任务是要研究一下用maven的archetype搭建一个SSH。</p></blockquote>

<p><img src="http://sargeraswang.com/images/blog_img/qqweibo.png"></p>

<!-- more -->


<h3>申请一键分享代码</h3>

<p>先去<a href="http://dev.t.qq.com/">腾讯微博开放平台</a>登陆后,点【网站接入】<br/>
<img src="http://sargeraswang.com/images/blog_img/wangzhanjieru.png" width="160"><br/>
再点【一键分享】<br/>
<img src="http://sargeraswang.com/images/blog_img/yijianfenxiang.png" width="160"><br/>
再点【立即使用】<br/>
<img src="http://sargeraswang.com/images/blog_img/lijishiyong.png">
然后填写【网站名称】和【网站地址】，选择一个样式，点【获取代码】<br/>
然后你可以看到两段代码：<br/>
一段是DIV</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;qqwb_share__&quot;</span> <span class="na">data-appkey=</span><span class="s">&quot;你的key&quot;</span> <span class="na">data-icon=</span><span class="s">&quot;0&quot;</span> <span class="na">data-counter=</span><span class="s">&quot;0&quot;</span> <span class="na">data-content=</span><span class="s">&quot;{title}&quot;</span> <span class="na">data-pic=</span><span class="s">&quot;{pic}&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>一段是JavaScript</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;http://mat1.gtimg.com/app/openjs/openjs.js#autoboot=no&amp;debug=no&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>添加代码到Octopress</h3>

<h4>第一段div</h4>

<p>打开octopress/source/_includes/post/sharing.html<br/>
加入</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% if site.qq_weibo %}
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;qqwb_share__&quot;</span> <span class="na">data-appkey=</span><span class="s">&quot;{{site.qq_weibo_key}}&quot;</span> <span class="na">data-icon=</span><span class="s">&quot;1&quot;</span> <span class="na">data-counter=</span><span class="s">&quot;0&quot;</span> <span class="na">data-counter_pos=</span><span class="s">&quot;{{qq_weibo_data_pos}}&quot;</span> <span class="na">data-content=</span><span class="s">&quot;{{page.title}}&quot;</span> <span class="na">data-pic=</span><span class="s">&quot;&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class='line'>{% endif %}
</span></code></pre></td></tr></table></div></figure>


<p>然后打开_config.yml
加入</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'># qq weibo
</span><span class='line'>qq_weibo: true
</span><span class='line'>qq_weibo_key: 你的key
</span><span class='line'>qq_weibo_data_pos: right
</span></code></pre></td></tr></table></div></figure>


<h4>第二段JavaScript</h4>

<p>打开octopress/source/_includes/custom/head.html<br/>
加入</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;http://mat1.gtimg.com/app/openjs/openjs.js#autoboot=no&amp;debug=no&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>测试</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>rake generate
</span><span class='line'>rake preview
</span></code></pre></td></tr></table></div></figure>


<p>看下效果，应该就可以了</p>

<h3>初阶完善</h3>

<h4>位置问题</h4>

<p>上面的代码生成后，一键分享按钮在画面的左对齐，看着很不顺眼，我想要他居中。试了下在div上加 <code>style="text-align:center;"</code>,没有用，用开发者模式看一下这个div，发现：</p>

<p><img src="http://sargeraswang.com/images/blog_img/divDebug.png"></p>

<p>Div上被加了<code>style="textalign:left;"</code>的属性，那段JavaScript一定是凶手，然后就去看<a href="http://mat1.gtimg.com/app/openjs/openjs.js#autoboot=no&amp;debug=no">这段JavaScript  </a>（一坨代码，你可以用GoogleChrome的<a href="https://chrome.google.com/webstore/detail/piekbefgpgdecckjcpffhnacjflfoddg">这个插件</a>来格式化一下，方便阅读），搜索<code>text-align:left</code>,找到了：<br/>
<img src="http://sargeraswang.com/images/blog_img/textAlign.png"></p>

<p>凶手是找到了，可是尝试过加一段JavaScript盖掉<code>text-align</code>,没有起到作用，一定是我的JavaScript功力不够。换个思路，最后决定用table了。最终可以达到居中效果的完整代码如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% if site.qq_weibo %}
</span><span class='line'><span class="nt">&lt;table</span> <span class="na">width=</span><span class="s">&quot;100%&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;tr&gt;</span>
</span><span class='line'><span class="nt">&lt;td&gt;</span><span class="ni">&amp;nbsp;</span><span class="nt">&lt;/td&gt;</span>
</span><span class='line'><span class="nt">&lt;td</span> <span class="na">width=</span><span class="s">&quot;62px&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;qqwb_share__&quot;</span> <span class="na">data-appkey=</span><span class="s">&quot;{{site.qq_weibo_key}}&quot;</span> <span class="na">data-icon=</span><span class="s">&quot;1&quot;</span> <span class="na">data-counter=</span><span class="s">&quot;0&quot;</span> <span class="na">data-counter_pos=</span><span class="s">&quot;{{qq_weibo_data_pos}}&quot;</span> <span class="na">data-content=</span><span class="s">&quot;{{page.title}}&quot;</span> <span class="na">data-pic=</span><span class="s">&quot;{{site.url}}/images/blog-title.png&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;/td&gt;</span>
</span><span class='line'><span class="nt">&lt;td&gt;</span><span class="ni">&amp;nbsp;</span><span class="nt">&lt;/td&gt;</span>
</span><span class='line'><span class="nt">&lt;/tr&gt;</span>
</span><span class='line'><span class="nt">&lt;/table&gt;</span>
</span><span class='line'>{% endif %}
</span></code></pre></td></tr></table></div></figure>


<h3>不尽人意之处</h3>

<ol>
<li>image应该可以读取文章中的所有图片才对，后续研究后补到这里。</li>
<li>最后用table定位居中的方式蠢了一些，后续有更好的解决办法再补到这里。
<font color="green">@2013-12-10 这个已解决<a href="http://sargeraswang.com/blog/2013/12/09/octopresstian-jia-teng-xun-wei-bo-fen-xiang-zhong-tu-pian-de-wen-ti/">链接</a></font></li>
</ol>

]]></content>
  </entry>
  
</feed>
